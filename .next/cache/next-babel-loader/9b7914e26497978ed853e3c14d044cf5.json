{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/phan/Desktop/Integrify/fullstack-graphql-next-nexus-prisma/pages/products/index.tsx\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query allProducts($skip: String!, $take: String!) {\\n        allProducts(skip: $skip, take: $take) {\\n            id\\n            name\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport Products from \"./Products\";\nimport { gql } from \"@apollo/client\";\nvar ALL_PRODUCTS = gql(_templateObject());\n\nvar AllProducts = function AllProducts() {\n  return __jsx(Products, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 12\n    }\n  });\n};\n\n_c = AllProducts;\nexport var __N_SSG = true;\nexport default AllProducts;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllProducts\");","map":{"version":3,"sources":["/Users/phan/Desktop/Integrify/fullstack-graphql-next-nexus-prisma/pages/products/index.tsx"],"names":["Products","gql","ALL_PRODUCTS","AllProducts"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,QAAP,MAAqB,YAArB;AAEA,SAAQC,GAAR,QAAkB,gBAAlB;AAGA,IAAMC,YAAY,GAAGD,GAAH,mBAAlB;;AASA,IAAME,WAAW,GAAG,SAAdA,WAAc,GAAM;AACtB,SAAO,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACH,CAFD;;KAAMA,W;;AAeN,eAAeA,WAAf","sourcesContent":["import Products from \"./Products\";\nimport { InferGetStaticPropsType } from 'next'\nimport {gql} from \"@apollo/client\";\nimport client from \"./apollo\";\n\nconst ALL_PRODUCTS = gql`\n    query allProducts($skip: String!, $take: String!) {\n        allProducts(skip: $skip, take: $take) {\n            id\n            name\n        }\n    }\n`\n\nconst AllProducts = () => {\n    return <Products/>\n}\n\nexport const getStaticProps = async () => {\n    const res = await fetch('https://.../posts')\n    const posts: Post[] = await res.json()\n\n    return {\n        props: {\n            posts,\n        },\n    }\n}\n\nexport default AllProducts\n"]},"metadata":{},"sourceType":"module"}