{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/Users/phan/Desktop/Integrify/fullstack-graphql-next-nexus-prisma/pages/about.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query allProducts {\\n      allProducts {\\n        id\\n        name\\n      }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport Link from 'next/link';\nimport Layout from '../components/Layout';\nimport { useQuery, gql } from '@apollo/client';\nimport { useState } from \"react\";\nvar ALL_PRODUCTS = gql(_templateObject());\nexport var __N_SSP = true;\n// @ts-ignore\nexport default function AboutPage(_ref) {\n  _s();\n\n  var loading = _ref.loading,\n      data = _ref.data;\n\n  var _useState = useState(data),\n      products = _useState[0],\n      setProducts = _useState[1];\n\n  if ((data === null || data === void 0 ? void 0 : data.length) === 0) {\n    var getProducts = useQuery(ALL_PRODUCTS);\n    console.log('getProducts', getProducts);\n    setProducts(getProducts === null || getProducts === void 0 ? void 0 : getProducts.data);\n  }\n\n  console.log(data);\n  return __jsx(Layout, {\n    title: \"About | Next.js + TypeScript Example\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 12\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, \"About\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, \"This is the about page\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, __jsx(Link, {\n    href: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, \"Go home\"))));\n} // @ts-ignore\n\n_s(AboutPage, \"wOoS18vVh5ODeVlKxdHua2SXkX4=\", false, function () {\n  return [useQuery];\n});\n\n_c = AboutPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"AboutPage\");","map":{"version":3,"sources":["/Users/phan/Desktop/Integrify/fullstack-graphql-next-nexus-prisma/pages/about.tsx"],"names":["Link","Layout","useQuery","gql","useState","ALL_PRODUCTS","AboutPage","loading","data","products","setProducts","length","getProducts","console","log"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAAuBC,QAAvB,EAAiCC,GAAjC,QAA4C,gBAA5C;AAIA,SAAQC,QAAR,QAAuB,OAAvB;AAEA,IAAMC,YAAY,GAAGF,GAAH,mBAAlB;;AAYA;AACA,eAAe,SAASG,SAAT,OAAoC;AAAA;;AAAA,MAAhBC,OAAgB,QAAhBA,OAAgB;AAAA,MAAPC,IAAO,QAAPA,IAAO;;AAAA,kBACfJ,QAAQ,CAACI,IAAD,CADO;AAAA,MACxCC,QADwC;AAAA,MAC9BC,WAD8B;;AAE/C,MAAI,CAAAF,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEG,MAAN,MAAiB,CAArB,EAAwB;AACpB,QAAMC,WAAW,GAAGV,QAAQ,CAACG,YAAD,CAA5B;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BF,WAA3B;AACAF,IAAAA,WAAW,CAACE,WAAD,aAACA,WAAD,uBAACA,WAAW,CAAEJ,IAAd,CAAX;AACH;;AACDK,EAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;AACA,SAAO,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,sCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADG,EAEH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAFG,EAGH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,CADJ,CAHG,CAAP;AASH,C,CAED;;GAnBwBF,S;UAGIJ,Q;;;KAHJI,S","sourcesContent":["import Link from 'next/link'\nimport Layout from '../components/Layout'\nimport { ApolloClient, useQuery, gql } from '@apollo/client'\nimport { GetServerSideProps } from 'next'\nimport {Product} from \"../interfaces\";\nimport client from \"./apollo\";\nimport {useState} from \"react\";\n\nconst ALL_PRODUCTS = gql`\n    query allProducts {\n      allProducts {\n        id\n        name\n      }\n    }\n`\n\nexport interface  IProducts {\n    products: Product[]\n}\n// @ts-ignore\nexport default function AboutPage({loading, data}) {\n    const [products, setProducts] = useState(data);\n    if (data?.length === 0) {\n        const getProducts = useQuery(ALL_PRODUCTS);\n        console.log('getProducts', getProducts)\n        setProducts(getProducts?.data!)\n    }\n    console.log(data)\n    return <Layout title=\"About | Next.js + TypeScript Example\">\n        <h1>About</h1>\n        <p>This is the about page</p>\n        <p>\n            <Link href=\"/\">\n                <a>Go home</a>\n            </Link>\n        </p>\n    </Layout>\n}\n\n// @ts-ignore\nexport async function getServerSideProps(context) {\n    if (!context.req) {\n        return {props: { loading: true, data: [] }}\n    }\n    console.log('context', context)\n    const { loading, data } = await client.query({\n        query: ALL_PRODUCTS\n    })\n    return {props: { loading, data }}\n}\n\n"]},"metadata":{},"sourceType":"module"}