{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/phan/Desktop/Integrify/fullstack-graphql-next-nexus-prisma/pages/users/detail/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query ppl($queryStr: String!) {\\n        product(queryStr: $queryStr) {\\n            id\\n            name\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport Layout from '../../../components/Layout';\nimport ListDetail from '../../../components/ListDetail';\nimport { gql } from \"@apollo/client\";\nimport { useRouter } from \"next/router\";\nvar DETAIL_USER = gql(_templateObject());\n\nvar StaticPropsDetail = function StaticPropsDetail(_ref) {\n  _s();\n\n  var item = _ref.item,\n      errors = _ref.errors;\n  var router = useRouter();\n  console.log('router.query', router.query);\n  console.log(2222);\n\n  if (errors) {\n    return __jsx(Layout, {\n      title: \"Error | Next.js + TypeScript Example\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }\n    }, __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }, __jsx(\"span\", {\n      style: {\n        color: 'red'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }\n    }, \"Error:\"), \" \", errors));\n  }\n\n  return __jsx(Layout, {\n    title: \"\".concat(item ? item.name : 'User Detail', \" | Next.js + TypeScript Example\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, item && __jsx(ListDetail, {\n    item: item,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 16\n    }\n  }));\n};\n\n_s(StaticPropsDetail, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\n_c = StaticPropsDetail;\nexport var __N_SSP = true;\nexport default StaticPropsDetail; // This function gets called at build time on server-side.\n// It won't be called on client-side, so you can even do\n// direct database queries.\n\nvar _c;\n\n$RefreshReg$(_c, \"StaticPropsDetail\");","map":{"version":3,"sources":["/Users/phan/Desktop/Integrify/fullstack-graphql-next-nexus-prisma/pages/users/detail/index.tsx"],"names":["Layout","ListDetail","gql","useRouter","DETAIL_USER","StaticPropsDetail","item","errors","router","console","log","query","color","name"],"mappings":";;;;;;;;;;;;;;;;;;;AAIA,OAAOA,MAAP,MAAmB,4BAAnB;AACA,OAAOC,UAAP,MAAuB,gCAAvB;AAGA,SAAQC,GAAR,QAAkB,gBAAlB;AACA,SAAQC,SAAR,QAAwB,aAAxB;AAEA,IAAMC,WAAW,GAAGF,GAAH,mBAAjB;;AAgBA,IAAMG,iBAAiB,GAAG,SAApBA,iBAAoB,OAA6B;AAAA;;AAAA,MAA1BC,IAA0B,QAA1BA,IAA0B;AAAA,MAApBC,MAAoB,QAApBA,MAAoB;AACrD,MAAMC,MAAM,GAAGL,SAAS,EAAxB;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BF,MAAM,CAACG,KAAnC;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;;AACA,MAAIH,MAAJ,EAAY;AACV,WACE,MAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,sCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,KAAK,EAAE;AAAEK,QAAAA,KAAK,EAAE;AAAT,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,OACgDL,MADhD,CADF,CADF;AAOD;;AAED,SACE,MAAC,MAAD;AACE,IAAA,KAAK,YACHD,IAAI,GAAGA,IAAI,CAACO,IAAR,GAAe,aADhB,oCADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGP,IAAI,IAAI,MAAC,UAAD;AAAY,IAAA,IAAI,EAAEA,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALX,CADF;AASD,CAvBD;;GAAMD,iB;UACWF,S;;;KADXE,iB;;AAyBN,eAAeA,iBAAf,C,CAEA;AACA;AACA","sourcesContent":["import {GetStaticProps, GetStaticPaths, GetServerSideProps} from 'next'\n\nimport { Ppl } from '../../../interfaces'\nimport { sampleUserData } from '../../utils/sample-data'\nimport Layout from '../../../components/Layout'\nimport ListDetail from '../../../components/ListDetail'\nimport client from \"../../apollo\";\nimport {AllUsersQuery} from \"../index\";\nimport {gql} from \"@apollo/client\";\nimport {useRouter} from \"next/router\";\n\nconst DETAIL_USER = gql`\n    query ppl($queryStr: String!) {\n        product(queryStr: $queryStr) {\n            id\n            name\n        }\n    }\n`\n\ntype Props = {\n  item?: Ppl\n  errors?: string\n}\n\n\n\nconst StaticPropsDetail = ({ item, errors }: Props) => {\n  const router = useRouter();\n  console.log('router.query', router.query)\n  console.log(2222)\n  if (errors) {\n    return (\n      <Layout title=\"Error | Next.js + TypeScript Example\">\n        <p>\n          <span style={{ color: 'red' }}>Error:</span> {errors}\n        </p>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout\n      title={`${\n        item ? item.name : 'User Detail'\n      } | Next.js + TypeScript Example`}\n    >\n      {item && <ListDetail item={item} />}\n    </Layout>\n  )\n}\n\nexport default StaticPropsDetail\n\n// This function gets called at build time on server-side.\n// It won't be called on client-side, so you can even do\n// direct database queries.\nexport const getServerSideProps: GetServerSideProps = async ({ ctx }) => {\n\n  console.log(11111111, ctx)\n  // const { loading, data } = await client.query({\n  //   query: DETAIL_USER,\n  //   variables: {\n  //     queryStr: ctx.query?.id\n  //   }\n  // })\n  //\n  // console.log(data)\n  //\n  return {\n    props: {\n      loading: 111\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}