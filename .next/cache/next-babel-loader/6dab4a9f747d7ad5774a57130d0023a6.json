{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/Users/phan/Desktop/Integrify/fullstack-graphql-next-nexus-prisma/pages/about.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query allProducts($skip: String!, $take: String!) {\\n        allProducts(skip: $skip, take: $take) {\\n            id\\n            name\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { gql, NetworkStatus, useQuery } from '@apollo/client';\nimport useStyles from './products/style';\nimport { Card, CardActionArea, CardActions, CardContent, CardMedia, Typography } from \"@material-ui/core\";\nimport React from \"react\";\nimport Box from \"@material-ui/core/Box\";\nvar ALL_PRODUCTS = gql(_templateObject());\nexport var __N_SSG = true;\n// @ts-ignore\nexport default function AboutPage(_ref) {\n  _s();\n\n  var _this = this;\n\n  var loading = _ref.loading,\n      data = _ref.data;\n  var classes = useStyles();\n  var devs = [{\n    name: 'Phan Hong Duc',\n    Career: 'Full stack developer in JS/TS and Java',\n    'Tech-skills': 'TS, ReactJS, NextJS, NodeJS, Express, GraphQL, MongoDB, Postgres, MySQL, Java, Vaadin, Git',\n    Address: 'Helsinki, Finland',\n    img: '/img/Duc-Phan.jpg',\n    github: 'https://github.com/hongduc-phan'\n  }, {\n    name: 'Phan Hong Phat',\n    Career: 'Full stack developer in JS/TS',\n    'Tech-skills': 'TS, ReactJS, NextJS, NodeJS, Express, GraphQL, MongoDB, Postgres, MySQL, Git',\n    Address: 'Helsinki, Finland',\n    img: '/img/Phat-Phan.jpg',\n    github: 'https://github.com/phanhongphat'\n  }, {\n    name: 'Phan Thanh Dat',\n    Career: 'Full stack developer in JS/TS and Java',\n    'Tech-skills': 'TS, ReactJS, NextJS, NodeJS, Express, GraphQL, MongoDB, Postgres, MySQL, Java, Vaadin, Git',\n    Address: 'Helsinki, Finland',\n    img: '/img/Dat-Phan.jpg',\n    github: 'https://github.com/ptdatkhtn'\n  }];\n\n  var _useQuery = useQuery(ALL_PRODUCTS, {\n    variables: {\n      skip: '0',\n      take: '3'\n    },\n    notifyOnNetworkStatusChange: true\n  }),\n      error = _useQuery.error,\n      fetchMore = _useQuery.fetchMore,\n      networkStatus = _useQuery.networkStatus;\n\n  var loadingMorePosts = networkStatus === NetworkStatus.fetchMore;\n  console.log(loadingMorePosts);\n  return __jsx(Box, {\n    className: classes.content__items,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 12\n    }\n  }, devs === null || devs === void 0 ? void 0 : devs.map(function (dev) {\n    return __jsx(Card, {\n      className: classes.content__item,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 32\n      }\n    }, __jsx(CardActionArea, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }, __jsx(CardMedia, {\n      className: classes.item__media,\n      image: dev.img,\n      title: dev.name,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }\n    }), __jsx(CardContent, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    }, __jsx(Typography, {\n      gutterBottom: true,\n      variant: \"h5\",\n      component: \"h2\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 25\n      }\n    }, dev.name), __jsx(Typography, {\n      variant: \"body2\",\n      color: \"textSecondary\",\n      component: \"p\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 25\n      }\n    }, dev['Tech-skills']), __jsx(Typography, {\n      className: classes.item__price,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 25\n      }\n    }, dev.Career))), __jsx(CardActions, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    }, __jsx(\"a\", {\n      href: dev.github,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }\n    }, \"Github\")));\n  }));\n}\n\n_s(AboutPage, \"Df86Yubfj6FpMxILssJlgomsp8I=\", false, function () {\n  return [useStyles, useQuery];\n});\n\n_c = AboutPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"AboutPage\");","map":{"version":3,"sources":["/Users/phan/Desktop/Integrify/fullstack-graphql-next-nexus-prisma/pages/about.tsx"],"names":["gql","NetworkStatus","useQuery","useStyles","Card","CardActionArea","CardActions","CardContent","CardMedia","Typography","React","Box","ALL_PRODUCTS","AboutPage","loading","data","classes","devs","name","Career","Address","img","github","variables","skip","take","notifyOnNetworkStatusChange","error","fetchMore","networkStatus","loadingMorePosts","console","log","content__items","map","dev","content__item","item__media","item__price"],"mappings":"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","sourcesContent":["import Link from 'next/link'\nimport Layout from '../components/Layout'\nimport {gql, NetworkStatus, useQuery} from '@apollo/client'\nimport useStyles from './products/style'\nimport {Product} from \"../interfaces\";\nimport {initializeApollo} from \"./apollo\";\nimport {Button, Card, CardActionArea, CardActions, CardContent, CardMedia, Typography} from \"@material-ui/core\";\nimport React from \"react\";\nimport Box from \"@material-ui/core/Box\";\n\nconst ALL_PRODUCTS = gql`\n    query allProducts($skip: String!, $take: String!) {\n        allProducts(skip: $skip, take: $take) {\n            id\n            name\n        }\n    }\n`\n\nexport interface  IProducts {\n    products: Product[]\n}\n// @ts-ignore\nexport default function AboutPage({loading, data}) {\n    const classes = useStyles();\n    const devs = [\n        {\n            name: 'Phan Hong Duc',\n            Career: 'Full stack developer in JS/TS and Java',\n            'Tech-skills': 'TS, ReactJS, NextJS, NodeJS, Express, GraphQL, MongoDB, Postgres, MySQL, Java, Vaadin, Git',\n            Address: 'Helsinki, Finland',\n            img: '/img/Duc-Phan.jpg',\n            github: 'https://github.com/hongduc-phan'\n        },\n        {\n            name: 'Phan Hong Phat',\n            Career: 'Full stack developer in JS/TS',\n            'Tech-skills': 'TS, ReactJS, NextJS, NodeJS, Express, GraphQL, MongoDB, Postgres, MySQL, Git',\n            Address: 'Helsinki, Finland',\n            img: '/img/Phat-Phan.jpg',\n            github: 'https://github.com/phanhongphat'\n        },\n        {\n            name: 'Phan Thanh Dat',\n            Career: 'Full stack developer in JS/TS and Java',\n            'Tech-skills': 'TS, ReactJS, NextJS, NodeJS, Express, GraphQL, MongoDB, Postgres, MySQL, Java, Vaadin, Git',\n            Address: 'Helsinki, Finland',\n            img: '/img/Dat-Phan.jpg',\n            github: 'https://github.com/ptdatkhtn'\n        }\n    ]\n    const { error, fetchMore, networkStatus } = useQuery(\n      ALL_PRODUCTS,\n      {\n          variables: {\n              skip: '0',\n              take: '3'\n          },\n          notifyOnNetworkStatusChange: true,\n      }\n    )\n    const loadingMorePosts = networkStatus === NetworkStatus.fetchMore\n    console.log(loadingMorePosts)\n    return <Box className={classes.content__items}>\n        {\n            devs?.map((dev)=> (<Card className={classes.content__item}>\n                <CardActionArea>\n                    <CardMedia className={classes.item__media}\n                               image={dev.img}\n                               title={dev.name}\n                    />\n                    <CardContent>\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                            {dev.name}\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                            {dev['Tech-skills']}\n                        </Typography>\n                        <Typography className={classes.item__price} >{dev.Career}</Typography>\n                    </CardContent>\n                </CardActionArea>\n                <CardActions>\n                    <a href={dev.github}>\n                        Github\n                    </a>\n\n                </CardActions>\n            </Card>))\n        }\n    </Box>\n}\n\nexport async function getStaticProps() {\n    const apolloClient = initializeApollo()\n\n    await apolloClient.query({\n        query: ALL_PRODUCTS,\n        variables: {\n            skip: '0',\n            take: '3'\n        },\n    })\n\n    return {\n        props: {\n            initialApolloState: apolloClient.cache.extract(),\n        },\n        revalidate: 1,\n    }\n}"]},"metadata":{},"sourceType":"module"}