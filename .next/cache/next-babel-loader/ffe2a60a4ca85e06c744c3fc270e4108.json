{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"@babel/runtime/helpers/slicedToArray\");\n\nexports.__esModule = true;\nexports.rewriteUrlForNextExport = rewriteUrlForNextExport;\n\nfunction rewriteUrlForNextExport(url) {\n  var _url$split = url.split('#'),\n      _url$split2 = _slicedToArray(_url$split, 2),\n      pathname = _url$split2[0],\n      hash = _url$split2[1]; // tslint:disable-next-line\n\n\n  var _pathname$split = pathname.split('?'),\n      _pathname$split2 = _slicedToArray(_pathname$split, 2),\n      path = _pathname$split2[0],\n      qs = _pathname$split2[1];\n\n  if (path) {\n    path = path.replace(/\\/$/, ''); // Append a trailing slash if this path does not have an extension\n\n    if (!/\\.[^/]+\\/?$/.test(path)) path += \"/\";\n  }\n\n  if (qs) path += '?' + qs;\n  if (hash) path += '#' + hash;\n  return path;\n}","map":{"version":3,"sources":["../../../../next-server/lib/router/rewrite-url-for-export.ts"],"names":["url","pathname","path"],"mappings":";;;;;;;AAAO,SAAA,uBAAA,CAAA,GAAA,EAAsD;AAAA,mBAClCA,GAAG,CAAHA,KAAAA,CAAzB,GAAyBA,CADkC;AAAA;AAAA,MACrD,QADqD;AAAA,MACrD,IADqD,mBAE3D;;;AAF2D,wBAG1CC,QAAQ,CAARA,KAAAA,CAAjB,GAAiBA,CAH0C;AAAA;AAAA,MAGvD,IAHuD;AAAA,MAGvD,EAHuD;;AAI3D,MAAA,IAAA,EAAU;AACRC,IAAAA,IAAI,GAAGA,IAAI,CAAJA,OAAAA,CAAAA,KAAAA,EAAPA,EAAOA,CAAPA,CADQ,CAER;;AACA,QAAI,CAAC,cAAA,IAAA,CAAL,IAAK,CAAL,EAA+BA,IAAAA,OAAAA;AAEjC;;AAAA,MAAA,EAAA,EAAQA,IAAI,IAAI,MAARA,EAAAA;AACR,MAAA,IAAA,EAAUA,IAAI,IAAI,MAARA,IAAAA;AACV,SAAA,IAAA;AACD","sourcesContent":["export function rewriteUrlForNextExport(url: string): string {\n  const [pathname, hash] = url.split('#')\n  // tslint:disable-next-line\n  let [path, qs] = pathname.split('?')\n  if (path) {\n    path = path.replace(/\\/$/, '')\n    // Append a trailing slash if this path does not have an extension\n    if (!/\\.[^/]+\\/?$/.test(path)) path += `/`\n  }\n  if (qs) path += '?' + qs\n  if (hash) path += '#' + hash\n  return path\n}\n"]},"metadata":{},"sourceType":"script"}