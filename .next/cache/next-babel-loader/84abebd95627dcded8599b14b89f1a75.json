{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/phan/Desktop/Integrify/fullstack-graphql-next-nexus-prisma/pages/users/detail/index.tsx\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../../../components/Layout';\n\nvar StaticPropsDetail = function StaticPropsDetail(_ref) {\n  var item = _ref.item,\n      errors = _ref.errors;\n\n  if (errors) {\n    return __jsx(Layout, {\n      title: \"Error | Next.js + TypeScript Example\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }\n    }, __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }, __jsx(\"span\", {\n      style: {\n        color: 'red'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }\n    }, \"Error:\"), \" \", errors));\n  }\n\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, item.id);\n};\n\n_c = StaticPropsDetail;\nexport var __N_SSP = true;\nexport default StaticPropsDetail; // This function gets called at build time on server-side.\n// It won't be called on client-side, so you can even do\n// direct database queries.\n\nvar _c;\n\n$RefreshReg$(_c, \"StaticPropsDetail\");","map":{"version":3,"sources":["/Users/phan/Desktop/Integrify/fullstack-graphql-next-nexus-prisma/pages/users/detail/index.tsx"],"names":["Layout","StaticPropsDetail","item","errors","color","id"],"mappings":";;;;;AAIA,OAAOA,MAAP,MAAmB,4BAAnB;;AAuBA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,OAA6B;AAAA,MAA1BC,IAA0B,QAA1BA,IAA0B;AAAA,MAApBC,MAAoB,QAApBA,MAAoB;;AACrD,MAAIA,MAAJ,EAAY;AACV,WACE,MAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,sCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,OACgDD,MADhD,CADF,CADF;AAOD;;AAED,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,IAAI,CAACG,EADR,CADF;AAKD,CAhBD;;KAAMJ,iB;;AAkBN,eAAeA,iBAAf,C,CAEA;AACA;AACA","sourcesContent":["import {GetStaticProps, GetStaticPaths, GetServerSideProps} from 'next'\n\nimport { Ppl } from '../../../interfaces'\nimport { sampleUserData } from '../../utils/sample-data'\nimport Layout from '../../../components/Layout'\nimport ListDetail from '../../../components/ListDetail'\nimport client from \"../../apollo\";\nimport {AllUsersQuery} from \"../index\";\nimport {gql} from \"@apollo/client\";\nimport {useRouter} from \"next/router\";\n\nconst DETAIL_USER = gql`\n    query ppl($queryStr: String!) {\n        ppl(queryStr: $queryStr) {\n            id\n            username\n        }\n    }\n`\n\ntype Props = {\n  item?: Ppl\n  errors?: string\n}\n\n\n\nconst StaticPropsDetail = ({ item, errors }: Props) => {\n  if (errors) {\n    return (\n      <Layout title=\"Error | Next.js + TypeScript Example\">\n        <p>\n          <span style={{ color: 'red' }}>Error:</span> {errors}\n        </p>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout>\n      {item.id}\n    </Layout>\n  )\n}\n\nexport default StaticPropsDetail\n\n// This function gets called at build time on server-side.\n// It won't be called on client-side, so you can even do\n// direct database queries.\nexport const getServerSideProps: GetServerSideProps = async (ctx) => {\n\n  console.log(11111111, ctx.query?.id)\n  const { loading, data } = await client.query({\n    query: DETAIL_USER,\n    variables: {\n      queryStr: ctx.query?.id\n    }\n  })\n\n  console.log(3333333333333333, data.ppl[0])\n\n  return {\n    props: {\n      loading,\n      item: data.ppl[0]\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}