{"ast":null,"code":"var _jsxFileName = \"/Users/phan/Desktop/Integrify/fullstack-graphql-next-nexus-prisma/pages/about.tsx\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport { gql } from '@apollo/client';\nimport useStyles from './products/style';\nimport { Card, CardActionArea, CardContent, CardMedia, Typography } from \"@material-ui/core\";\nimport React from \"react\";\nimport Box from \"@material-ui/core/Box\";\nconst ALL_PRODUCTS = gql`\n    query allProducts($skip: String!, $take: String!) {\n        allProducts(skip: $skip, take: $take) {\n            id\n            name\n        }\n    }\n`;\n// @ts-ignore\nexport default function AboutPage({\n  loading,\n  data\n}) {\n  const classes = useStyles();\n  const devs = [{\n    name: 'Phan Hong Duc',\n    Career: 'Full stack developer in JS/TS and Java',\n    'Tech-skills': 'TS, ReactJS, NextJS, NodeJS, Express, GraphQL, MongoDB, Postgres, MySQL, Java, Vaadin, Git',\n    Address: 'Helsinki, Finland',\n    img: './../Assest/img/Duc-Phan.jpg',\n    github: 'https://github.com/hongduc-phan'\n  }, {\n    name: 'Phan Hong Phat',\n    Career: 'Full stack developer in JS/TS',\n    'Tech-skills': 'TS, ReactJS, NextJS, NodeJS, Express, GraphQL, MongoDB, Postgres, MySQL, Git',\n    Address: 'Helsinki, Finland',\n    img: './../Assest/img/Duc-Phan.jpg',\n    github: 'https://github.com/phanhongphat'\n  }, {\n    name: 'Phan Thanh Dat',\n    Career: 'Full stack developer in JS/TS and Java',\n    'Tech-skills': 'TS, ReactJS, NextJS, NodeJS, Express, GraphQL, MongoDB, Postgres, MySQL, Java, Vaadin, Git',\n    Address: 'Helsinki, Finland',\n    img: './../Assest/img/Duc-Phan.jpg',\n    github: 'https://github.com/ptdatkhtn'\n  }];\n  return __jsx(Box, {\n    className: classes.content__items,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 12\n    }\n  }, devs === null || devs === void 0 ? void 0 : devs.map(dev => __jsx(Link, {\n    href: dev.github,\n    passHref: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 32\n    }\n  }, __jsx(Card, {\n    className: classes.content__item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, __jsx(CardActionArea, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }\n  }, __jsx(CardMedia, {\n    className: classes.item__media,\n    image: dev.img,\n    title: dev.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 25\n    }\n  }), __jsx(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 25\n    }\n  }, __jsx(Typography, {\n    gutterBottom: true,\n    variant: \"h5\",\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 29\n    }\n  }, dev.name), __jsx(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 29\n    }\n  }, dev['Tech-skills']), __jsx(Typography, {\n    className: classes.item__price,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 29\n    }\n  }, dev.Career)))))));\n} // // @ts-ignore\n// export async function getServerSideProps(context) {\n//     // console.log('context--->', context.req)\n//     const { loading, data } = await client.query({\n//         query: ALL_PRODUCTS,\n//         variables: {\n//             skip: \"0\",\n//             take: \"2\"\n//         }\n//     })\n//     console.log('aaaaaaa--->', data)\n//     return {props: { loading, data }}\n// }","map":{"version":3,"sources":["/Users/phan/Desktop/Integrify/fullstack-graphql-next-nexus-prisma/pages/about.tsx"],"names":["Link","gql","useStyles","Card","CardActionArea","CardContent","CardMedia","Typography","React","Box","ALL_PRODUCTS","AboutPage","loading","data","classes","devs","name","Career","Address","img","github","content__items","map","dev","content__item","item__media","item__price"],"mappings":"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","sourcesContent":["import Link from 'next/link'\nimport Layout from '../components/Layout'\nimport {gql, useQuery} from '@apollo/client'\nimport useStyles from './products/style'\nimport {Product} from \"../interfaces\";\nimport client from \"./apollo\";\nimport {Button, Card, CardActionArea, CardActions, CardContent, CardMedia, Typography} from \"@material-ui/core\";\nimport React from \"react\";\nimport Box from \"@material-ui/core/Box\";\n\nconst ALL_PRODUCTS = gql`\n    query allProducts($skip: String!, $take: String!) {\n        allProducts(skip: $skip, take: $take) {\n            id\n            name\n        }\n    }\n`\n\nexport interface  IProducts {\n    products: Product[]\n}\n// @ts-ignore\nexport default function AboutPage({loading, data}) {\n    const classes = useStyles();\n    const devs = [\n        {\n            name: 'Phan Hong Duc',\n            Career: 'Full stack developer in JS/TS and Java',\n            'Tech-skills': 'TS, ReactJS, NextJS, NodeJS, Express, GraphQL, MongoDB, Postgres, MySQL, Java, Vaadin, Git',\n            Address: 'Helsinki, Finland',\n            img: './../Assest/img/Duc-Phan.jpg',\n            github: 'https://github.com/hongduc-phan'\n        },\n        {\n            name: 'Phan Hong Phat',\n            Career: 'Full stack developer in JS/TS',\n            'Tech-skills': 'TS, ReactJS, NextJS, NodeJS, Express, GraphQL, MongoDB, Postgres, MySQL, Git',\n            Address: 'Helsinki, Finland',\n            img: './../Assest/img/Duc-Phan.jpg',\n            github: 'https://github.com/phanhongphat'\n        },\n        {\n            name: 'Phan Thanh Dat',\n            Career: 'Full stack developer in JS/TS and Java',\n            'Tech-skills': 'TS, ReactJS, NextJS, NodeJS, Express, GraphQL, MongoDB, Postgres, MySQL, Java, Vaadin, Git',\n            Address: 'Helsinki, Finland',\n            img: './../Assest/img/Duc-Phan.jpg',\n            github: 'https://github.com/ptdatkhtn'\n        }\n    ]\n    return <Box className={classes.content__items}>\n        {\n            devs?.map((dev)=> (<Link href={dev.github} passHref={true} >\n                <Card className={classes.content__item}>\n                    <CardActionArea>\n                        <CardMedia className={classes.item__media}\n                                   image={dev.img}\n                                   title={dev.name}\n                        />\n                        <CardContent>\n                            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                                {dev.name}\n                            </Typography>\n                            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                {dev['Tech-skills']}\n                            </Typography>\n                            <Typography className={classes.item__price} >{dev.Career}</Typography>\n                        </CardContent>\n                    </CardActionArea>\n                </Card>\n            </Link>))\n        }\n    </Box>\n}\n\n// // @ts-ignore\n// export async function getServerSideProps(context) {\n//     // console.log('context--->', context.req)\n//     const { loading, data } = await client.query({\n//         query: ALL_PRODUCTS,\n//         variables: {\n//             skip: \"0\",\n//             take: \"2\"\n//         }\n//     })\n//     console.log('aaaaaaa--->', data)\n//     return {props: { loading, data }}\n// }\n\n"]},"metadata":{},"sourceType":"module"}