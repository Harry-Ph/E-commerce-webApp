{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"/Users/phan/Desktop/Integrify/fullstack-graphql-next-nexus-prisma/pages/about.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport Layout from '../components/Layout';\nexport var __N_SSP = true;\n// @ts-ignore\nexport default function AboutPage(_ref) {\n  var loading = _ref.loading,\n      data = _ref.data;\n  console.log('data--->', data);\n  return __jsx(Layout, {\n    title: \"About | Next.js + TypeScript Example\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 12\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, \"About\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, \"This is the about page\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, __jsx(Link, {\n    href: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }, \"Go home\"))));\n} // @ts-ignore\n\n_c = AboutPage;\nvar ProductsListData = graphql(productInfo, {\n  props: function props(_ref2) {\n    var _ref2$data = _ref2.data,\n        loading = _ref2$data.loading,\n        cursor = _ref2$data.cursor,\n        allProducts = _ref2$data.allProducts,\n        fetchMore = _ref2$data.fetchMore;\n    return {\n      loading: loading,\n      allProducts: allProducts,\n      loadMoreEntries: function loadMoreEntries() {\n        return fetchMore({\n          variables: {\n            cursor: cursor\n          },\n          updateQuery: function updateQuery(previousResult, _ref3) {\n            var fetchMoreResult = _ref3.fetchMoreResult;\n            var previousEntry = previousResult.entry;\n            var newProducts = fetchMoreResult.allProducts;\n            return {\n              cursor: fetchMoreResult.cursor,\n              entry: {\n                allProducts: [].concat(_toConsumableArray(previousEntry.entry.allProducts), _toConsumableArray(newProducts))\n              }\n            };\n          }\n        });\n      }\n    };\n  }\n})(ProductsList);\n\nvar _c;\n\n$RefreshReg$(_c, \"AboutPage\");","map":{"version":3,"sources":["/Users/phan/Desktop/Integrify/fullstack-graphql-next-nexus-prisma/pages/about.tsx"],"names":["Link","Layout","AboutPage","loading","data","console","log","ProductsListData","graphql","productInfo","props","cursor","allProducts","fetchMore","loadMoreEntries","variables","updateQuery","previousResult","fetchMoreResult","previousEntry","entry","newProducts","ProductsList"],"mappings":";;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAkBA;AACA,eAAe,SAASC,SAAT,OAAoC;AAAA,MAAhBC,OAAgB,QAAhBA,OAAgB;AAAA,MAAPC,IAAO,QAAPA,IAAO;AAC/CC,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,IAAxB;AACA,SAAO,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,sCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADG,EAEH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAFG,EAGH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,CADJ,CAHG,CAAP;AASH,C,CAED;;KAbwBF,S;AA0BxB,IAAMK,gBAAgB,GAAGC,OAAO,CAACC,WAAD,EAAc;AAC1CC,EAAAA,KAD0C,wBACmB;AAAA,2BAArDN,IAAqD;AAAA,QAA7CD,OAA6C,cAA7CA,OAA6C;AAAA,QAApCQ,MAAoC,cAApCA,MAAoC;AAAA,QAA5BC,WAA4B,cAA5BA,WAA4B;AAAA,QAAfC,SAAe,cAAfA,SAAe;AACzD,WAAO;AACHV,MAAAA,OAAO,EAAPA,OADG;AAEHS,MAAAA,WAAW,EAAXA,WAFG;AAGHE,MAAAA,eAAe,EAAE,2BAAM;AACnB,eAAOD,SAAS,CAAC;AACbE,UAAAA,SAAS,EAAE;AACPJ,YAAAA,MAAM,EAAEA;AADD,WADE;AAIbK,UAAAA,WAAW,EAAE,qBAACC,cAAD,SAAyC;AAAA,gBAAtBC,eAAsB,SAAtBA,eAAsB;AAClD,gBAAMC,aAAa,GAAGF,cAAc,CAACG,KAArC;AACA,gBAAMC,WAAW,GAAGH,eAAe,CAACN,WAApC;AACA,mBAAO;AACHD,cAAAA,MAAM,EAAEO,eAAe,CAACP,MADrB;AAEHS,cAAAA,KAAK,EAAE;AACHR,gBAAAA,WAAW,+BAAMO,aAAa,CAACC,KAAd,CAAoBR,WAA1B,sBAA0CS,WAA1C;AADR;AAFJ,aAAP;AAMH;AAbY,SAAD,CAAhB;AAeH;AAnBE,KAAP;AAqBH;AAvByC,CAAd,CAAP,CAwBtBC,YAxBsB,CAAzB","sourcesContent":["import Link from 'next/link'\nimport Layout from '../components/Layout'\nimport { gql } from '@apollo/client'\n\nimport {Product} from \"../interfaces\";\nimport client from \"./apollo\";\n\nconst ALL_PRODUCTS = gql`\n    query allProducts($offset: Int, $limit: Int) {\n      allProducts(skip: $offset, take: $limit) {\n        id\n        name\n      }\n    }\n`\n\nexport interface  IProducts {\n    products: Product[]\n}\n// @ts-ignore\nexport default function AboutPage({loading, data}) {\n    console.log('data--->', data)\n    return <Layout title=\"About | Next.js + TypeScript Example\">\n        <h1>About</h1>\n        <p>This is the about page</p>\n        <p>\n            <Link href=\"/\">\n                <a>Go home</a>\n            </Link>\n        </p>\n    </Layout>\n}\n\n// @ts-ignore\nexport async function getServerSideProps(context) {\n    console.log('context--->', context.req)\n    const { loading, data } = await client.query({\n        query: ALL_PRODUCTS,\n        variables: {\n            skip: 0,\n            limit: 10\n        }\n    })\n    return {props: { loading, data }}\n}\n\nconst ProductsListData = graphql(productInfo, {\n    props({ data: { loading, cursor, allProducts, fetchMore } }) {\n        return {\n            loading,\n            allProducts,\n            loadMoreEntries: () => {\n                return fetchMore({\n                    variables: {\n                        cursor: cursor,\n                    },\n                    updateQuery: (previousResult, { fetchMoreResult }) => {\n                        const previousEntry = previousResult.entry;\n                        const newProducts = fetchMoreResult.allProducts;\n                        return {\n                            cursor: fetchMoreResult.cursor,\n                            entry: {\n                                allProducts: [...previousEntry.entry.allProducts, ...newProducts],\n                            },\n                        };\n                    },\n                });\n            },\n        };\n    },\n})(ProductsList);\n"]},"metadata":{},"sourceType":"module"}