{"ast":null,"code":"var _jsxFileName = \"/Users/phan/Desktop/Integrify/fullstack-graphql-next-nexus-prisma/pages/users/detail/index.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../../../components/Layout';\nimport client from \"../../apollo\";\nimport { gql } from \"@apollo/client\";\nconst DETAIL_USER = gql`\n    query ppl($queryStr: String!) {\n        ppl(queryStr: $queryStr) {\n            id\n            username\n        }\n    }\n`;\n\nconst StaticPropsDetail = ({\n  item,\n  errors\n}) => {\n  console.log('112asdasd', item);\n\n  if (errors) {\n    return __jsx(Layout, {\n      title: \"Error | Next.js + TypeScript Example\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }\n    }, __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }\n    }, __jsx(\"span\", {\n      style: {\n        color: 'red'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }\n    }, \"Error:\"), \" \", errors));\n  }\n\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, \"111111111\");\n};\n\nexport default StaticPropsDetail; // This function gets called at build time on server-side.\n// It won't be called on client-side, so you can even do\n// direct database queries.\n\nexport const getServerSideProps = async ctx => {\n  var _ctx$query, _ctx$query2;\n\n  console.log(11111111, (_ctx$query = ctx.query) === null || _ctx$query === void 0 ? void 0 : _ctx$query.id);\n  const {\n    loading,\n    data\n  } = await client.query({\n    query: DETAIL_USER,\n    variables: {\n      queryStr: (_ctx$query2 = ctx.query) === null || _ctx$query2 === void 0 ? void 0 : _ctx$query2.id\n    }\n  });\n  console.log(3333333333333333, data.ppl[0]);\n  return {\n    props: {\n      loading,\n      item: data.ppl[0]\n    }\n  };\n};","map":{"version":3,"sources":["/Users/phan/Desktop/Integrify/fullstack-graphql-next-nexus-prisma/pages/users/detail/index.tsx"],"names":["Layout","client","gql","DETAIL_USER","StaticPropsDetail","item","errors","console","log","color","getServerSideProps","ctx","query","id","loading","data","variables","queryStr","ppl","props"],"mappings":";;;AAIA,OAAOA,MAAP,MAAmB,4BAAnB;AAEA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,SAAQC,GAAR,QAAkB,gBAAlB;AAGA,MAAMC,WAAW,GAAGD,GAAI;;;;;;;CAAxB;;AAgBA,MAAME,iBAAiB,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAA6B;AACrDC,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAwBH,IAAxB;;AACA,MAAIC,MAAJ,EAAY;AACV,WACE,MAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,sCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,KAAK,EAAE;AAAEG,QAAAA,KAAK,EAAE;AAAT,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,OACgDH,MADhD,CADF,CADF;AAOD;;AAED,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF;AAID,CAhBD;;AAkBA,eAAeF,iBAAf,C,CAEA;AACA;AACA;;AACA,OAAO,MAAMM,kBAAsC,GAAG,MAAOC,GAAP,IAAe;AAAA;;AAEnEJ,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,gBAAsBG,GAAG,CAACC,KAA1B,+CAAsB,WAAWC,EAAjC;AACA,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAoB,MAAMd,MAAM,CAACW,KAAP,CAAa;AAC3CA,IAAAA,KAAK,EAAET,WADoC;AAE3Ca,IAAAA,SAAS,EAAE;AACTC,MAAAA,QAAQ,iBAAEN,GAAG,CAACC,KAAN,gDAAE,YAAWC;AADZ;AAFgC,GAAb,CAAhC;AAOAN,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BO,IAAI,CAACG,GAAL,CAAS,CAAT,CAA9B;AAEA,SAAO;AACLC,IAAAA,KAAK,EAAE;AACLL,MAAAA,OADK;AAELT,MAAAA,IAAI,EAAEU,IAAI,CAACG,GAAL,CAAS,CAAT;AAFD;AADF,GAAP;AAMD,CAlBM","sourcesContent":["import {GetStaticProps, GetStaticPaths, GetServerSideProps} from 'next'\n\nimport { Ppl } from '../../../interfaces'\nimport { sampleUserData } from '../../utils/sample-data'\nimport Layout from '../../../components/Layout'\nimport ListDetail from '../../../components/ListDetail'\nimport client from \"../../apollo\";\nimport {AllUsersQuery} from \"../index\";\nimport {gql} from \"@apollo/client\";\nimport {useRouter} from \"next/router\";\n\nconst DETAIL_USER = gql`\n    query ppl($queryStr: String!) {\n        ppl(queryStr: $queryStr) {\n            id\n            username\n        }\n    }\n`\n\ntype Props = {\n  item?: Ppl\n  errors?: string\n}\n\n\n\nconst StaticPropsDetail = ({ item, errors }: Props) => {\n  console.log('112asdasd',item)\n  if (errors) {\n    return (\n      <Layout title=\"Error | Next.js + TypeScript Example\">\n        <p>\n          <span style={{ color: 'red' }}>Error:</span> {errors}\n        </p>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout>111111111\n    </Layout>\n  )\n}\n\nexport default StaticPropsDetail\n\n// This function gets called at build time on server-side.\n// It won't be called on client-side, so you can even do\n// direct database queries.\nexport const getServerSideProps: GetServerSideProps = async (ctx) => {\n\n  console.log(11111111, ctx.query?.id)\n  const { loading, data } = await client.query({\n    query: DETAIL_USER,\n    variables: {\n      queryStr: ctx.query?.id\n    }\n  })\n\n  console.log(3333333333333333, data.ppl[0])\n\n  return {\n    props: {\n      loading,\n      item: data.ppl[0]\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}