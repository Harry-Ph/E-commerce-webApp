{"ast":null,"code":"var _jsxFileName = \"/Users/phan/Desktop/Integrify/fullstack-graphql-next-nexus-prisma/components/AllUsers.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { useAllUsersQuery } from \"../generated/graphql\";\n\nconst AllUsers = () => {\n  var _data$allUsers, _data$allUsers2;\n\n  const [result] = useAllUsersQuery();\n  const {\n    data,\n    fetching,\n    error\n  } = result;\n  if (fetching) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 24\n    }\n  }, \"Loading...\");\n  if (error) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 21\n    }\n  }, \"Oh no... \", error.message);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, \"There are \", data === null || data === void 0 ? void 0 : (_data$allUsers = data.allUsers) === null || _data$allUsers === void 0 ? void 0 : _data$allUsers.length, \" user(s) in the database:\"), __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, data === null || data === void 0 ? void 0 : (_data$allUsers2 = data.allUsers) === null || _data$allUsers2 === void 0 ? void 0 : _data$allUsers2.map(user => __jsx(\"li\", {\n    key: user.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }\n  }, user.name))));\n};\n\nexport default AllUsers;","map":{"version":3,"sources":["/Users/phan/Desktop/Integrify/fullstack-graphql-next-nexus-prisma/components/AllUsers.tsx"],"names":["React","useAllUsersQuery","AllUsers","result","data","fetching","error","message","allUsers","length","map","user","id","name"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,QAAiC,sBAAjC;;AAEA,MAAMC,QAAkB,GAAG,MAAM;AAAA;;AAC/B,QAAM,CAACC,MAAD,IAAWF,gBAAgB,EAAjC;AACA,QAAM;AAAEG,IAAAA,IAAF;AAAQC,IAAAA,QAAR;AAAkBC,IAAAA;AAAlB,MAA4BH,MAAlC;AAEA,MAAIE,QAAJ,EAAc,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACd,MAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAaA,KAAK,CAACC,OAAnB,CAAP;AAEX,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACaH,IADb,aACaA,IADb,yCACaA,IAAI,CAAEI,QADnB,mDACa,eAAgBC,MAD7B,8BADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,IADH,aACGA,IADH,0CACGA,IAAI,CAAEI,QADT,oDACG,gBAAgBE,GAAhB,CAAqBC,IAAD,IACnB;AAAI,IAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmBD,IAAI,CAACE,IAAxB,CADD,CADH,CAJF,CADF;AAYD,CAnBD;;AAqBA,eAAeX,QAAf","sourcesContent":["import React from \"react\";\nimport { useAllUsersQuery } from \"../generated/graphql\";\n\nconst AllUsers: React.FC = () => {\n  const [result] = useAllUsersQuery();\n  const { data, fetching, error } = result;\n\n  if (fetching) return <p>Loading...</p>;\n  if (error) return <p>Oh no... {error.message}</p>;\n\n  return (\n    <div>\n      <p>\n        There are {data?.allUsers?.length} user(s) in the database:\n      </p>\n      <ul>\n        {data?.allUsers?.map((user) => (\n          <li key={user.id}>{user.name}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default AllUsers;\n"]},"metadata":{},"sourceType":"module"}