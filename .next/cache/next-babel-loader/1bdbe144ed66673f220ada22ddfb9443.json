{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/phan/Desktop/Integrify/fullstack-graphql-next-nexus-prisma/pages/users/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query AllUsers($skip: String!, $take: String!) {\\n    allUsers(skip: $skip, take: $take) {\\n      id\\n      username\\n      email\\n      password\\n      role\\n      status\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport Link from 'next/link';\nimport Layout from '../../components/Layout';\nimport gql from 'graphql-tag';\nimport Table from '../../components/Table';\nimport { Box } from '@material-ui/core';\nimport Loading from '../../components/Loading';\nimport { useRouter } from 'next/router';\nimport { Pagination, PaginationItem, Skeleton } from '@material-ui/lab';\nexport var __N_SSP = true;\nexport var AllUsersQuery = gql(_templateObject());\n\nvar WithStaticProps = function WithStaticProps(_ref) {\n  _s();\n\n  var loading = _ref.loading,\n      users = _ref.users,\n      numberPages = _ref.numberPages;\n  var router = useRouter();\n\n  if (loading || !users) {\n    return __jsx(Loading, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return __jsx(Layout, {\n    title: \"Users List | Next.js + TypeScript Example\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, \"Users List\"), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, \"Example fetching data from inside \", __jsx(\"code\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 41\n    }\n  }, \"getStaticProps()\"), \".\"), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, \"You are currently on: /users\"), __jsx(Box, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, numberPages > 0 || !loading ? __jsx(Pagination, {\n    page: parseInt(router.query.page || '1'),\n    count: numberPages,\n    defaultPage: 1,\n    renderItem: function renderItem(item) {\n      return __jsx(PaginationItem, _extends({\n        component: MaterialUiLink,\n        query: router.query,\n        item: item\n      }, item, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 44\n    }\n  }) : __jsx(Skeleton, {\n    variant: \"rect\",\n    width: '30vw',\n    height: '28px',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  })), __jsx(Table, {\n    items: users,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, __jsx(Link, {\n    href: \"/api/books\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, __jsx(\"a\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, \"Go home\"))));\n};\n\n_s(WithStaticProps, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\n_c = WithStaticProps;\nexport default WithStaticProps;\nexport function MaterialUiLink(_ref2) {\n  var item = _ref2.item,\n      query = _ref2.query,\n      props = _objectWithoutProperties(_ref2, [\"item\", \"query\"]);\n\n  return __jsx(Link, {\n    href: {\n      // users?page=1\n      pathname: '/users',\n      query: _objectSpread(_objectSpread({}, query), {}, {\n        page: item.page\n      })\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }, __jsx(\"a\", _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  })));\n}\n_c2 = MaterialUiLink;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"WithStaticProps\");\n$RefreshReg$(_c2, \"MaterialUiLink\");","map":{"version":3,"sources":["/Users/phan/Desktop/Integrify/fullstack-graphql-next-nexus-prisma/pages/users/index.tsx"],"names":["Link","Layout","gql","Table","Box","Loading","useRouter","Pagination","PaginationItem","Skeleton","AllUsersQuery","WithStaticProps","loading","users","numberPages","router","parseInt","query","page","item","MaterialUiLink","props","pathname"],"mappings":"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","sourcesContent":["import {  GetServerSideProps } from 'next'\nimport Link from 'next/link'\n\nimport { Ppl } from '../../interfaces'\nimport Layout from '../../components/Layout'\nimport gql from 'graphql-tag'\nimport client from '../../src/apollo'\nimport Table from '../../components/Table';\nimport { Box } from '@material-ui/core'\nimport Loading from '../../components/Loading'\nimport { useRouter } from 'next/router'\nimport { Pagination, PaginationItem, Skeleton, PaginationRenderItemParams } from '@material-ui/lab'\nimport { ParsedUrlQuery } from 'querystring'\nimport { PrismaClient } from '@prisma/client'\nconst prisma2 = new PrismaClient()\n\ntype Props = {\n  users: Ppl[]\n  numberPages: number\n  loading: boolean\n}\n\nexport const AllUsersQuery = gql`\n  query AllUsers($skip: String!, $take: String!) {\n    allUsers(skip: $skip, take: $take) {\n      id\n      username\n      email\n      password\n      role\n      status\n    }\n  }\n`;\n\n\n\nconst WithStaticProps = ({ loading, users, numberPages }: Props) => {\n  const router = useRouter();\n  if( loading || !users) {\n    return <Loading/>\n  }\n  return (\n    <Layout title=\"Users List | Next.js + TypeScript Example\">\n    <h1>Users List</h1>\n    <p>\n      Example fetching data from inside <code>getStaticProps()</code>.\n    </p>\n    <p>You are currently on: /users</p>\n    \n    <Box>\n        {\n          (numberPages > 0 || !loading) ? (<Pagination\n              page={parseInt(router.query.page as string || '1')}\n              count={numberPages}\n              defaultPage={1}\n              renderItem={(item) => (\n                <PaginationItem\n                  component={MaterialUiLink}\n                  query={router.query}\n                  item={item}\n                  {...item}\n                />\n              )}\n            />) :\n            <Skeleton variant=\"rect\" width={'30vw'} height={'28px'} />\n        }\n    </Box>\n\n    <Table items={users} />\n    <p>\n      <Link href=\"/api/books\">\n        <a>Go home</a>\n      </Link>\n    </p>\n  </Layout>\n  );\n  }\n\n\n\nexport default WithStaticProps\n\nexport interface MaterialUiLinkProps {\n  item: PaginationRenderItemParams;\n  query: ParsedUrlQuery;\n}\n\nexport function MaterialUiLink({ item, query, ...props }: MaterialUiLinkProps) {\n  return (\n    <Link\n      href={\n        { // users?page=1\n          pathname: '/users',\n          query: {...query, page: item.page}\n        }\n      }\n    >\n      <a {...props}></a>\n    </Link>\n  );\n}\n\nexport const getServerSideProps:GetServerSideProps = async (ctx) => {\n  const pageQuery = (ctx.query?.page || 1) as string;\nctx.req\n  const take = '3';\n  const totalUsers = await prisma2.ppl.findMany();\n  const usersArray = Object.keys(totalUsers).map((k) => totalUsers[parseInt(k)])\n  const numberPages = Math.ceil((usersArray?.length || 0) as number / +take) as number;\n \n\n  const first = String((parseInt(pageQuery) -1) * (+take))\n  const { loading, data } = await client.query({\n            query: AllUsersQuery,\n            variables: {\n              skip: first,\n              take: take\n            }\n        })\n\n  return {\n    props: {\n      loading,\n      users: data?.allUsers,\n      numberPages\n    }\n  }\n}"]},"metadata":{},"sourceType":"module"}