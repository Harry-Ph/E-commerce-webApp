{"ast":null,"code":"var _jsxFileName = \"/Users/phan/Desktop/Integrify/fullstack-graphql-next-nexus-prisma/pages/about.tsx\";\nvar __jsx = React.createElement;\nimport { gql, useQuery } from '@apollo/client';\nimport useStyles from './products/style';\nimport { initializeApollo } from \"./apollo\";\nimport { Card, CardActionArea, CardActions, CardContent, CardMedia, Typography } from \"@material-ui/core\";\nimport React from \"react\";\nimport Box from \"@material-ui/core/Box\";\nconst ALL_PRODUCTS = gql`\n    query allProducts($skip: String!, $take: String!) {\n        allProducts(skip: $skip, take: $take) {\n            id\n            name\n        }\n    }\n`;\n// @ts-ignore\nexport default function AboutPage({\n  initialApolloState\n}) {\n  const classes = useStyles();\n  const devs = [{\n    name: 'Phan Hong Duc',\n    Career: 'Full stack developer in JS/TS and Java',\n    'Tech-skills': 'TS, ReactJS, NextJS, NodeJS, Express, GraphQL, MongoDB, Postgres, MySQL, Java, Vaadin, Git',\n    Address: 'Helsinki, Finland',\n    img: '/img/Duc-Phan.jpg',\n    github: 'https://github.com/hongduc-phan'\n  }, {\n    name: 'Phan Hong Phat',\n    Career: 'Full stack developer in JS/TS',\n    'Tech-skills': 'TS, ReactJS, NextJS, NodeJS, Express, GraphQL, MongoDB, Postgres, MySQL, Git',\n    Address: 'Helsinki, Finland',\n    img: '/img/Phat-Phan.jpg',\n    github: 'https://github.com/phanhongphat'\n  }, {\n    name: 'Phan Thanh Dat',\n    Career: 'Full stack developer in JS/TS and Java',\n    'Tech-skills': 'TS, ReactJS, NextJS, NodeJS, Express, GraphQL, MongoDB, Postgres, MySQL, Java, Vaadin, Git',\n    Address: 'Helsinki, Finland',\n    img: '/img/Dat-Phan.jpg',\n    github: 'https://github.com/ptdatkhtn'\n  }];\n  const result = useQuery(ALL_PRODUCTS, {\n    variables: {\n      skip: '0',\n      take: '3'\n    },\n    notifyOnNetworkStatusChange: true\n  }); // const loadingMorePosts = networkStatus === NetworkStatus.fetchMore\n  // console.log(loadingMorePosts)\n\n  console.log('result', result);\n  console.log('initialApolloState', initialApolloState);\n  return __jsx(Box, {\n    className: classes.content__items,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 12\n    }\n  }, devs === null || devs === void 0 ? void 0 : devs.map(dev => __jsx(Card, {\n    className: classes.content__item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 32\n    }\n  }, __jsx(CardActionArea, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, __jsx(CardMedia, {\n    className: classes.item__media,\n    image: dev.img,\n    title: dev.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }), __jsx(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }, __jsx(Typography, {\n    gutterBottom: true,\n    variant: \"h5\",\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 25\n    }\n  }, dev.name), __jsx(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 25\n    }\n  }, dev['Tech-skills']), __jsx(Typography, {\n    className: classes.item__price,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 25\n    }\n  }, dev.Career))), __jsx(CardActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, __jsx(\"a\", {\n    href: dev.github,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  }, \"Github\")))));\n}\nexport async function getStaticProps() {\n  const apolloClient = initializeApollo();\n  await apolloClient.query({\n    query: ALL_PRODUCTS,\n    variables: {\n      skip: '0',\n      take: '3'\n    }\n  });\n  return {\n    props: {\n      initialApolloState: apolloClient.cache.extract()\n    },\n    revalidate: 1\n  };\n}","map":{"version":3,"sources":["/Users/phan/Desktop/Integrify/fullstack-graphql-next-nexus-prisma/pages/about.tsx"],"names":["gql","useQuery","useStyles","initializeApollo","Card","CardActionArea","CardActions","CardContent","CardMedia","Typography","React","Box","ALL_PRODUCTS","AboutPage","initialApolloState","classes","devs","name","Career","Address","img","github","result","variables","skip","take","notifyOnNetworkStatusChange","console","log","content__items","map","dev","content__item","item__media","item__price","getStaticProps","apolloClient","query","props","cache","extract","revalidate"],"mappings":"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","sourcesContent":["import Link from 'next/link'\nimport Layout from '../components/Layout'\nimport {gql, NetworkStatus, useQuery} from '@apollo/client'\nimport useStyles from './products/style'\nimport {Product} from \"../interfaces\";\nimport {initializeApollo} from \"./apollo\";\nimport {Button, Card, CardActionArea, CardActions, CardContent, CardMedia, Typography} from \"@material-ui/core\";\nimport React from \"react\";\nimport Box from \"@material-ui/core/Box\";\n\nconst ALL_PRODUCTS = gql`\n    query allProducts($skip: String!, $take: String!) {\n        allProducts(skip: $skip, take: $take) {\n            id\n            name\n        }\n    }\n`\n\nexport interface  IProducts {\n    products: Product[]\n}\n// @ts-ignore\nexport default function AboutPage({initialApolloState}) {\n    const classes = useStyles();\n    const devs = [\n        {\n            name: 'Phan Hong Duc',\n            Career: 'Full stack developer in JS/TS and Java',\n            'Tech-skills': 'TS, ReactJS, NextJS, NodeJS, Express, GraphQL, MongoDB, Postgres, MySQL, Java, Vaadin, Git',\n            Address: 'Helsinki, Finland',\n            img: '/img/Duc-Phan.jpg',\n            github: 'https://github.com/hongduc-phan'\n        },\n        {\n            name: 'Phan Hong Phat',\n            Career: 'Full stack developer in JS/TS',\n            'Tech-skills': 'TS, ReactJS, NextJS, NodeJS, Express, GraphQL, MongoDB, Postgres, MySQL, Git',\n            Address: 'Helsinki, Finland',\n            img: '/img/Phat-Phan.jpg',\n            github: 'https://github.com/phanhongphat'\n        },\n        {\n            name: 'Phan Thanh Dat',\n            Career: 'Full stack developer in JS/TS and Java',\n            'Tech-skills': 'TS, ReactJS, NextJS, NodeJS, Express, GraphQL, MongoDB, Postgres, MySQL, Java, Vaadin, Git',\n            Address: 'Helsinki, Finland',\n            img: '/img/Dat-Phan.jpg',\n            github: 'https://github.com/ptdatkhtn'\n        }\n    ]\n    const result = useQuery(\n      ALL_PRODUCTS,\n      {\n          variables: {\n              skip: '0',\n              take: '3'\n          },\n          notifyOnNetworkStatusChange: true,\n      }\n    )\n    // const loadingMorePosts = networkStatus === NetworkStatus.fetchMore\n    // console.log(loadingMorePosts)\n    console.log('result', result)\n    console.log('initialApolloState', initialApolloState)\n    return <Box className={classes.content__items}>\n        {\n            devs?.map((dev)=> (<Card className={classes.content__item}>\n                <CardActionArea>\n                    <CardMedia className={classes.item__media}\n                               image={dev.img}\n                               title={dev.name}\n                    />\n                    <CardContent>\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                            {dev.name}\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                            {dev['Tech-skills']}\n                        </Typography>\n                        <Typography className={classes.item__price} >{dev.Career}</Typography>\n                    </CardContent>\n                </CardActionArea>\n                <CardActions>\n                    <a href={dev.github}>\n                        Github\n                    </a>\n\n                </CardActions>\n            </Card>))\n        }\n    </Box>\n}\n\nexport async function getStaticProps() {\n    const apolloClient = initializeApollo()\n\n    await apolloClient.query({\n        query: ALL_PRODUCTS,\n        variables: {\n            skip: '0',\n            take: '3'\n        },\n    })\n\n    return {\n        props: {\n            initialApolloState: apolloClient.cache.extract(),\n        },\n        revalidate: 1,\n    }\n}"]},"metadata":{},"sourceType":"module"}