{"ast":null,"code":"var _jsxFileName = \"/Users/phan/Desktop/Integrify/fullstack-graphql-next-nexus-prisma/pages/about.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport Layout from '../components/Layout';\nimport { useQuery, gql } from '@apollo/client';\nimport client from \"./apollo\";\nimport { useState } from \"react\";\nconst ALL_PRODUCTS = gql`\n    query allProducts {\n      allProducts {\n        id\n        name\n      }\n    }\n`;\n// @ts-ignore\nexport default function AboutPage({\n  loading,\n  data\n}) {\n  const {\n    0: products,\n    1: setProducts\n  } = useState(data);\n\n  if (data.length() === 0) {\n    const getProducts = useQuery(ALL_PRODUCTS);\n    console.log(getProducts);\n    setProducts(getProducts === null || getProducts === void 0 ? void 0 : getProducts.data);\n  }\n\n  console.log(data);\n  return __jsx(Layout, {\n    title: \"About | Next.js + TypeScript Example\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 12\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, \"About\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, \"This is the about page\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, __jsx(Link, {\n    href: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, \"Go home\"))));\n} // @ts-ignore\n\nexport async function getServerSideProps(context) {\n  if (!context.req) {\n    return {\n      props: {\n        loading: true,\n        data: []\n      }\n    };\n  }\n\n  console.log('context', context);\n  const {\n    loading,\n    data\n  } = await client.query({\n    query: ALL_PRODUCTS\n  });\n  return {\n    props: {\n      loading,\n      data\n    }\n  };\n}","map":{"version":3,"sources":["/Users/phan/Desktop/Integrify/fullstack-graphql-next-nexus-prisma/pages/about.tsx"],"names":["Link","Layout","useQuery","gql","client","useState","ALL_PRODUCTS","AboutPage","loading","data","products","setProducts","length","getProducts","console","log","getServerSideProps","context","req","props","query"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAAuBC,QAAvB,EAAiCC,GAAjC,QAA4C,gBAA5C;AAGA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAAQC,QAAR,QAAuB,OAAvB;AAEA,MAAMC,YAAY,GAAGH,GAAI;;;;;;;CAAzB;AAYA;AACA,eAAe,SAASI,SAAT,CAAmB;AAACC,EAAAA,OAAD;AAAUC,EAAAA;AAAV,CAAnB,EAAoC;AAC/C,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0BN,QAAQ,CAACI,IAAD,CAAxC;;AACA,MAAIA,IAAI,CAACG,MAAL,OAAkB,CAAtB,EAAyB;AACrB,UAAMC,WAAW,GAAGX,QAAQ,CAACI,YAAD,CAA5B;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAYF,WAAZ;AACAF,IAAAA,WAAW,CAACE,WAAD,aAACA,WAAD,uBAACA,WAAW,CAAEJ,IAAd,CAAX;AACH;;AACDK,EAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;AACA,SAAO,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,sCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADG,EAEH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAFG,EAGH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,CADJ,CAHG,CAAP;AASH,C,CAED;;AACA,OAAO,eAAeO,kBAAf,CAAkCC,OAAlC,EAA2C;AAC9C,MAAI,CAACA,OAAO,CAACC,GAAb,EAAkB;AACd,WAAO;AAACC,MAAAA,KAAK,EAAE;AAAEX,QAAAA,OAAO,EAAE,IAAX;AAAiBC,QAAAA,IAAI,EAAE;AAAvB;AAAR,KAAP;AACH;;AACDK,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBE,OAAvB;AACA,QAAM;AAAET,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAoB,MAAML,MAAM,CAACgB,KAAP,CAAa;AACzCA,IAAAA,KAAK,EAAEd;AADkC,GAAb,CAAhC;AAGA,SAAO;AAACa,IAAAA,KAAK,EAAE;AAAEX,MAAAA,OAAF;AAAWC,MAAAA;AAAX;AAAR,GAAP;AACH","sourcesContent":["import Link from 'next/link'\nimport Layout from '../components/Layout'\nimport { ApolloClient, useQuery, gql } from '@apollo/client'\nimport { GetServerSideProps } from 'next'\nimport {Product} from \"../interfaces\";\nimport client from \"./apollo\";\nimport {useState} from \"react\";\n\nconst ALL_PRODUCTS = gql`\n    query allProducts {\n      allProducts {\n        id\n        name\n      }\n    }\n`\n\nexport interface  IProducts {\n    products: Product[]\n}\n// @ts-ignore\nexport default function AboutPage({loading, data}) {\n    const [products, setProducts] = useState(data);\n    if (data.length() === 0) {\n        const getProducts = useQuery(ALL_PRODUCTS);\n        console.log(getProducts)\n        setProducts(getProducts?.data!)\n    }\n    console.log(data)\n    return <Layout title=\"About | Next.js + TypeScript Example\">\n        <h1>About</h1>\n        <p>This is the about page</p>\n        <p>\n            <Link href=\"/\">\n                <a>Go home</a>\n            </Link>\n        </p>\n    </Layout>\n}\n\n// @ts-ignore\nexport async function getServerSideProps(context) {\n    if (!context.req) {\n        return {props: { loading: true, data: [] }}\n    }\n    console.log('context', context)\n    const { loading, data } = await client.query({\n        query: ALL_PRODUCTS\n    })\n    return {props: { loading, data }}\n}\n\n"]},"metadata":{},"sourceType":"module"}