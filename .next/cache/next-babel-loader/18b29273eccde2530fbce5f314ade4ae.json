{"ast":null,"code":"var _jsxFileName = \"/Users/phan/Desktop/Integrify/fullstack-graphql-next-nexus-prisma/pages/about.tsx\";\nvar __jsx = React.createElement;\nimport { gql, useQuery } from '@apollo/client';\nimport useStyles from './products/style';\nimport client from \"./apollo\";\nimport { Card, CardActionArea, CardActions, CardContent, CardMedia, Typography } from \"@material-ui/core\";\nimport React from \"react\";\nimport Box from \"@material-ui/core/Box\";\nconst ALL_PRODUCTS = gql`\n    query allProducts($skip: String!, $take: String!) {\n        allProducts(skip: $skip, take: $take) {\n            id\n            name\n        }\n    }\n`;\n// @ts-ignore\nexport default function AboutPage() {\n  const classes = useStyles();\n  const devs = [{\n    name: 'Phan Hong Duc',\n    Career: 'Full stack developer in JS/TS and Java',\n    'Tech-skills': 'TS, ReactJS, NextJS, NodeJS, Express, GraphQL, MongoDB, Postgres, MySQL, Java, Vaadin, Git',\n    Address: 'Helsinki, Finland',\n    img: '/img/Duc-Phan.jpg',\n    github: 'https://github.com/hongduc-phan'\n  }, {\n    name: 'Phan Hong Phat',\n    Career: 'Full stack developer in JS/TS',\n    'Tech-skills': 'TS, ReactJS, NextJS, NodeJS, Express, GraphQL, MongoDB, Postgres, MySQL, Git',\n    Address: 'Helsinki, Finland',\n    img: '/img/Phat-Phan.jpg',\n    github: 'https://github.com/phanhongphat'\n  }, {\n    name: 'Phan Thanh Dat',\n    Career: 'Full stack developer in JS/TS and Java',\n    'Tech-skills': 'TS, ReactJS, NextJS, NodeJS, Express, GraphQL, MongoDB, Postgres, MySQL, Java, Vaadin, Git',\n    Address: 'Helsinki, Finland',\n    img: '/img/Dat-Phan.jpg',\n    github: 'https://github.com/ptdatkhtn'\n  }];\n\n  try {\n    // clear apollo client cache/store\n    if (client && typeof client.resetStore === 'function') {\n      client.resetStore().then(r => {\n        const {\n          data,\n          error,\n          loading\n        } = useQuery(ALL_PRODUCTS, {\n          variables: {\n            skip: '0',\n            take: '2'\n          }\n        });\n        console.log('result link', data);\n      });\n    }\n  } catch (e) {\n    console.error('err client', e);\n  }\n\n  return __jsx(Box, {\n    className: classes.content__items,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 12\n    }\n  }, devs === null || devs === void 0 ? void 0 : devs.map(dev => __jsx(Card, {\n    className: classes.content__item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 33\n    }\n  }, __jsx(CardActionArea, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, __jsx(CardMedia, {\n    className: classes.item__media,\n    image: dev.img,\n    title: dev.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  }), __jsx(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  }, __jsx(Typography, {\n    gutterBottom: true,\n    variant: \"h5\",\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 25\n    }\n  }, dev.name), __jsx(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 25\n    }\n  }, dev['Tech-skills']), __jsx(Typography, {\n    className: classes.item__price,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 25\n    }\n  }, dev.Career))), __jsx(CardActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, __jsx(\"a\", {\n    href: dev.github,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 21\n    }\n  }, \"Github\")))));\n} // // @ts-ignore\n// export async function getServerSideProps(context) {\n//     // console.log('context--->', context.req)\n//     const { loading, data } = await client.query({\n//         query: ALL_PRODUCTS,\n//         variables: {\n//             skip: \"0\",\n//             take: \"2\"\n//         }\n//     })\n//     console.log('aaaaaaa--->', data)\n//     return {props: { loading, data }}\n// }","map":{"version":3,"sources":["/Users/phan/Desktop/Integrify/fullstack-graphql-next-nexus-prisma/pages/about.tsx"],"names":["gql","useQuery","useStyles","client","Card","CardActionArea","CardActions","CardContent","CardMedia","Typography","React","Box","ALL_PRODUCTS","AboutPage","classes","devs","name","Career","Address","img","github","resetStore","then","r","data","error","loading","variables","skip","take","console","log","e","content__items","map","dev","content__item","item__media","item__price"],"mappings":"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","sourcesContent":["import Link from 'next/link'\nimport Layout from '../components/Layout'\nimport {gql, useQuery} from '@apollo/client'\nimport useStyles from './products/style'\nimport {Product} from \"../interfaces\";\nimport client from \"./apollo\";\nimport {Button, Card, CardActionArea, CardActions, CardContent, CardMedia, Typography} from \"@material-ui/core\";\nimport React from \"react\";\nimport Box from \"@material-ui/core/Box\";\n\nconst ALL_PRODUCTS = gql`\n    query allProducts($skip: String!, $take: String!) {\n        allProducts(skip: $skip, take: $take) {\n            id\n            name\n        }\n    }\n`\n\nexport interface  IProducts {\n    products: Product[]\n}\n// @ts-ignore\nexport default function AboutPage() {\n    const classes = useStyles();\n    const devs = [\n        {\n            name: 'Phan Hong Duc',\n            Career: 'Full stack developer in JS/TS and Java',\n            'Tech-skills': 'TS, ReactJS, NextJS, NodeJS, Express, GraphQL, MongoDB, Postgres, MySQL, Java, Vaadin, Git',\n            Address: 'Helsinki, Finland',\n            img: '/img/Duc-Phan.jpg',\n            github: 'https://github.com/hongduc-phan'\n        },\n        {\n            name: 'Phan Hong Phat',\n            Career: 'Full stack developer in JS/TS',\n            'Tech-skills': 'TS, ReactJS, NextJS, NodeJS, Express, GraphQL, MongoDB, Postgres, MySQL, Git',\n            Address: 'Helsinki, Finland',\n            img: '/img/Phat-Phan.jpg',\n            github: 'https://github.com/phanhongphat'\n        },\n        {\n            name: 'Phan Thanh Dat',\n            Career: 'Full stack developer in JS/TS and Java',\n            'Tech-skills': 'TS, ReactJS, NextJS, NodeJS, Express, GraphQL, MongoDB, Postgres, MySQL, Java, Vaadin, Git',\n            Address: 'Helsinki, Finland',\n            img: '/img/Dat-Phan.jpg',\n            github: 'https://github.com/ptdatkhtn'\n        }\n    ]\n\n    try {\n        // clear apollo client cache/store\n        if (client && typeof client.resetStore === 'function') {\n            client.resetStore().then(r => {\n                const {data, error, loading} = useQuery(ALL_PRODUCTS, {\n                    variables: {\n                        skip: '0',\n                        take: '2'\n                    }\n                })\n                console.log('result link', data)\n            })\n        }\n    } catch (e) {\n        console.error('err client', e)\n    }\n\n\n\n    return <Box className={classes.content__items}>\n        {\n            devs?.map((dev) => (<Card className={classes.content__item}>\n                <CardActionArea>\n                    <CardMedia className={classes.item__media}\n                               image={dev.img}\n                               title={dev.name}\n                    />\n                    <CardContent>\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                            {dev.name}\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                            {dev['Tech-skills']}\n                        </Typography>\n                        <Typography className={classes.item__price}>{dev.Career}</Typography>\n                    </CardContent>\n                </CardActionArea>\n                <CardActions>\n                    <a href={dev.github}>\n                        Github\n                    </a>\n\n                </CardActions>\n            </Card>))\n        }\n    </Box>\n}\n\n// // @ts-ignore\n// export async function getServerSideProps(context) {\n//     // console.log('context--->', context.req)\n//     const { loading, data } = await client.query({\n//         query: ALL_PRODUCTS,\n//         variables: {\n//             skip: \"0\",\n//             take: \"2\"\n//         }\n//     })\n//     console.log('aaaaaaa--->', data)\n//     return {props: { loading, data }}\n// }\n\n"]},"metadata":{},"sourceType":"module"}