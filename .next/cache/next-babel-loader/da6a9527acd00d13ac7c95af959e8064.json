{"ast":null,"code":"var _jsxFileName = \"/Users/phan/Desktop/Integrify/fullstack-graphql-next-nexus-prisma/components/Modal/index.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { Modal, Backdrop, Fade, Button, CircularProgress, Box, FormGroup, TextField } from '@material-ui/core';\nimport { request } from \"graphql-request\";\nimport { mutate, trigger } from 'swr';\nimport useStyles from './style';\nimport { useRouter } from \"next/router\";\nimport { ErrorMessage, Field, Form, Formik } from \"formik\";\nimport { object, string } from \"yup\";\n\nconst sleep = time => new Promise(acc => setTimeout(acc, time));\n\nconst fetcher = (query, skip, take) => request(API, query, {\n  skip,\n  take\n});\n/* GraphQL */\n\n\nconst REMOVE_PRODUCT =\n/* GraphQL */\n`\n    mutation removeProductById($id: String!) {\n        removeProductById(id: $id) {\n            id\n            name\n        }\n    }\n`;\n/* GraphQL */\n\nconst CREATE_PRODUCT2 =\n/* GraphQL */\n`\n  mutation createNewOneProduct($name: String!) {\n    createNewOneProduct(name: $name) {\n      id\n      name\n    }\n  }\n`;\nconst API = 'http://localhost:3000/api/graphql';\nconst initialValues = {\n  name: ''\n};\nconst take = '9'; // @ts-ignore\n\nexport default function TransitionsModal({\n  products,\n  redirectRouting,\n  currentPage,\n  handleOpen,\n  product,\n  handleClose,\n  open,\n  isEdit\n}) {\n  var _router$query;\n\n  const classes = useStyles();\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(false);\n  const router = useRouter();\n  const pageQuery = (_router$query = router.query) === null || _router$query === void 0 ? void 0 : _router$query.page;\n  const skip = String((parseInt(pageQuery) - 1) * +take);\n\n  const handleRemoveInModal = async e => {\n    e.preventDefault();\n    e.stopPropagation();\n    await setIsLoading(true);\n    await sleep(2500);\n    const {\n      id\n    } = product; // const productsAfterRemoved: Product[] = products?.filter((p) => p!.id != id )\n\n    await mutate(API);\n    mutate(API, async products => {\n      const list = await fetcher(API);\n      return [user, ...users.slice(1)];\n    });\n    await request(API, REMOVE_PRODUCT, {\n      id\n    });\n    await trigger(API);\n    await handleClose(e); // await redirectRouting(String(currentPage))\n    // await Router.replace(`/products/${currentPage}`,  `/products/${currentPage}`, {shallow: true})\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, __jsx(Modal, {\n    className: classes.modal,\n    open: open,\n    onClose: handleClose,\n    closeAfterTransition: true,\n    BackdropComponent: Backdrop,\n    BackdropProps: {\n      timeout: 500\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, __jsx(Fade, {\n    in: open,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 21\n    }\n  }, __jsx(\"h2\", {\n    id: \"transition-modal-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 25\n    }\n  }, isEdit ? 'EDIT' : 'DELETE', \" THIS PRODUCT\"), __jsx(\"p\", {\n    id: \"transition-modal-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 25\n    }\n  }, \"Do you want to \", isEdit ? 'edit' : 'delete', \" this item?.\"), isEdit ? __jsx(Formik, {\n    validationSchema: object({\n      name: string().required().min(2).max(50)\n    }),\n    initialValues: initialValues,\n    onSubmit: () => {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 29\n    }\n  }, ({\n    isSubmitting\n  }) => __jsx(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 37\n    }\n  }, __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 41\n    }\n  }, __jsx(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 45\n    }\n  }, __jsx(Field, {\n    name: \"name\",\n    as: TextField,\n    label: \"Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 49\n    }\n  }), __jsx(ErrorMessage, {\n    name: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 49\n    }\n  }))), __jsx(Button, {\n    size: \"small\",\n    variant: \"contained\",\n    color: \"primary\",\n    type: \"submit\",\n    disabled: isSubmitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 41\n    }\n  }, \"SUBMIT\"), __jsx(Button, {\n    size: \"small\",\n    variant: \"outlined\",\n    color: \"default\",\n    type: \"submit\",\n    onClick: handleClose,\n    disabled: isLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 41\n    }\n  }, \"CANCEL\"))) : __jsx(React.Fragment, null, __jsx(Button, {\n    size: \"small\",\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleRemoveInModal,\n    startIcon: isLoading ? __jsx(CircularProgress, {\n      size: \"1rem\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 60\n      }\n    }) : null,\n    disabled: isLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 33\n    }\n  }, \"REMOVE\"), __jsx(Button, {\n    size: \"small\",\n    variant: \"outlined\",\n    color: \"default\",\n    type: \"submit\",\n    onClick: handleClose,\n    disabled: isLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 33\n    }\n  }, \"CANCEL\"))))));\n}","map":{"version":3,"sources":["/Users/phan/Desktop/Integrify/fullstack-graphql-next-nexus-prisma/components/Modal/index.tsx"],"names":["React","useState","Modal","Backdrop","Fade","Button","CircularProgress","Box","FormGroup","TextField","request","mutate","trigger","useStyles","useRouter","ErrorMessage","Field","Form","Formik","object","string","sleep","time","Promise","acc","setTimeout","fetcher","query","skip","take","API","REMOVE_PRODUCT","CREATE_PRODUCT2","initialValues","name","TransitionsModal","products","redirectRouting","currentPage","handleOpen","product","handleClose","open","isEdit","classes","isLoading","setIsLoading","router","pageQuery","page","String","parseInt","handleRemoveInModal","e","preventDefault","stopPropagation","id","list","user","users","slice","modal","timeout","paper","required","min","max","isSubmitting"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport {Modal, Backdrop, Fade, Button, CircularProgress, Box, FormGroup, TextField, MenuItem} from '@material-ui/core';\n\nimport {request} from \"graphql-request\";\nimport useSWR, {mutate, trigger} from 'swr'\nimport useStyles from './style';\nimport Router, {useRouter} from \"next/router\";\nimport {Product} from \"../../interfaces\";\nimport {ErrorMessage, Field, Form, Formik, FormikConfig, FormikValues} from \"formik\";\nimport Loading from \"../Loading\";\nimport {object, string} from \"yup\";\n\nconst sleep = (time) => new Promise((acc) => setTimeout(acc, time));\nconst fetcher = (query: any, skip: string, take: string) =>\n  request(API, query, { skip, take });\n\n/* GraphQL */\nconst REMOVE_PRODUCT = /* GraphQL */`\n    mutation removeProductById($id: String!) {\n        removeProductById(id: $id) {\n            id\n            name\n        }\n    }\n`\n\n/* GraphQL */\nconst CREATE_PRODUCT2 = /* GraphQL */ `\n  mutation createNewOneProduct($name: String!) {\n    createNewOneProduct(name: $name) {\n      id\n      name\n    }\n  }\n`;\n\nconst API = 'http://localhost:3000/api/graphql'\n\nexport interface IModel {\n  currentPage: any\n  handleOpen: (e: any)=> void\n  product: Product\n  handleClose: (e: any)=> void\n  redirectRouting:  (currentPage: string)=> void\n  open: boolean\n  isEdit: boolean\n  products: Product[]\n}\n\nconst initialValues = {\n    name: '',\n}\nconst take = '9'\n\n// @ts-ignore\nexport default function TransitionsModal({products, redirectRouting, currentPage, handleOpen, product, handleClose, open, isEdit}: IModel) {\n    const classes = useStyles();\n    const [isLoading, setIsLoading] = useState(false);\n    const router = useRouter();\n    const pageQuery = router.query?.page\n    const skip = String((parseInt(pageQuery) - 1) * +take);\n    const handleRemoveInModal = async (e) => {\n\n      e.preventDefault();\n      e.stopPropagation();\n\n      await setIsLoading(true)\n      await sleep(2500);\n\n      const {id} = product;\n\n      // const productsAfterRemoved: Product[] = products?.filter((p) => p!.id != id )\n      await mutate(API);\n      mutate(API, async products => {\n        const list = await fetcher(API, )\n        return [user, ...users.slice(1)]\n      })\n      await request(API, REMOVE_PRODUCT, {id})\n      await trigger(API);\n\n      await handleClose(e);\n\n      // await redirectRouting(String(currentPage))\n      // await Router.replace(`/products/${currentPage}`,  `/products/${currentPage}`, {shallow: true})\n    }\n\n    return (\n        <div>\n            <Modal\n                className={classes.modal}\n                open={open}\n                onClose={handleClose}\n                closeAfterTransition\n                BackdropComponent={Backdrop}\n                BackdropProps={{\n                    timeout: 500,\n                }}\n            >\n                <Fade in={open}>\n                    <div className={classes.paper}>\n                        <h2 id=\"transition-modal-title\">{isEdit ? 'EDIT' : 'DELETE'} THIS PRODUCT</h2>\n                        <p id=\"transition-modal-description\">Do you want to {isEdit ? 'edit' : 'delete'} this item?.</p>\n                        {isEdit ?\n                            <Formik\n                                validationSchema={\n                                    object({\n                                        name: string().required().min(2).max(50),\n                                    })\n                                }\n                                initialValues={initialValues}\n                                onSubmit={() => {}}>\n                                {({isSubmitting}) => (\n                                    <Form>\n                                        <Box>\n                                            <FormGroup>\n                                                <Field name=\"name\" as={TextField} label=\"Name\"/>\n                                                <ErrorMessage name=\"name\" />\n                                            </FormGroup>\n                                        </Box>\n                                        <Button size=\"small\"\n                                                variant=\"contained\"\n                                                color=\"primary\"\n                                                type=\"submit\" disabled={isSubmitting}>SUBMIT</Button>\n                                        <Button\n                                            size=\"small\"\n                                            variant=\"outlined\"\n                                            color=\"default\"\n                                            type=\"submit\"\n                                            onClick={handleClose}\n                                            disabled={isLoading}\n                                        >CANCEL</Button>\n                                    </Form>\n                                )}\n                            </Formik>\n                            :\n                            <>\n                                <Button\n                                    size=\"small\"\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={handleRemoveInModal}\n                                    startIcon={isLoading ? <CircularProgress size=\"1rem\" /> : null}\n                                    disabled={isLoading}\n                                >REMOVE</Button>\n                                <Button\n                                    size=\"small\"\n                                    variant=\"outlined\"\n                                    color=\"default\"\n                                    type=\"submit\"\n                                    onClick={handleClose}\n                                    disabled={isLoading}\n                                >CANCEL</Button>\n                            </>\n                        }\n                    </div>\n                </Fade>\n            </Modal>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}