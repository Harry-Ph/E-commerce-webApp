{"ast":null,"code":"var _jsxFileName = \"/Users/phan/Desktop/Integrify/fullstack-graphql-next-nexus-prisma/pages/about.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport Layout from '../components/Layout';\nimport { gql } from '@apollo/client';\nconst ALL_PRODUCTS = gql`\n    query allProducts {\n      allProducts {\n        id\n        name\n      }\n    }\n`;\n// @ts-ignore\nexport default function AboutPage({\n  loading,\n  error,\n  data\n}) {\n  if (loading) return 'Loading...';\n  if (error) console.log(error.message);\n  console.log(data);\n  return __jsx(Layout, {\n    title: \"About | Next.js + TypeScript Example\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 12\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, \"About\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, \"This is the about page\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, __jsx(Link, {\n    href: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  }, \"Go home\"))));\n} // @ts-ignore\n\nexport async function getServerSideProps(context) {\n  console.log(context);\n  const {\n    loading,\n    error,\n    data\n  } = await apolloClient.query({});\n  return {\n    props: {\n      loading,\n      error,\n      data\n    }\n  };\n}","map":{"version":3,"sources":["/Users/phan/Desktop/Integrify/fullstack-graphql-next-nexus-prisma/pages/about.tsx"],"names":["Link","Layout","gql","ALL_PRODUCTS","AboutPage","loading","error","data","console","log","message","getServerSideProps","context","apolloClient","query","props"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAAuBC,GAAvB,QAAkC,gBAAlC;AAIA,MAAMC,YAAY,GAAGD,GAAI;;;;;;;CAAzB;AAYA;AACA,eAAe,SAASE,SAAT,CAAmB;AAACC,EAAAA,OAAD;AAAUC,EAAAA,KAAV;AAAiBC,EAAAA;AAAjB,CAAnB,EAA2C;AACtD,MAAIF,OAAJ,EAAa,OAAO,YAAP;AACb,MAAIC,KAAJ,EAAWE,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACI,OAAlB;AACXF,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,SAAO,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,sCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADG,EAEH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAFG,EAGH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,CADJ,CAHG,CAAP;AASH,C,CAED;;AACA,OAAO,eAAeI,kBAAf,CAAkCC,OAAlC,EAA2C;AAC9CJ,EAAAA,OAAO,CAACC,GAAR,CAAYG,OAAZ;AACA,QAAM;AAAEP,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2B,MAAMM,YAAY,CAACC,KAAb,CAAmB,EAAnB,CAAvC;AAGA,SAAO;AAACC,IAAAA,KAAK,EAAE;AAAEV,MAAAA,OAAF;AAAWC,MAAAA,KAAX;AAAkBC,MAAAA;AAAlB;AAAR,GAAP;AACH","sourcesContent":["import Link from 'next/link'\nimport Layout from '../components/Layout'\nimport { ApolloClient, gql } from '@apollo/client'\nimport { GetServerSideProps } from 'next'\nimport {Product} from \"../interfaces\";\n\nconst ALL_PRODUCTS = gql`\n    query allProducts {\n      allProducts {\n        id\n        name\n      }\n    }\n`\n\nexport interface  IProducts {\n    products: Product[]\n}\n// @ts-ignore\nexport default function AboutPage({loading, error, data}) {\n    if (loading) return 'Loading...';\n    if (error) console.log(error.message);\n    console.log(data)\n    return <Layout title=\"About | Next.js + TypeScript Example\">\n        <h1>About</h1>\n        <p>This is the about page</p>\n        <p>\n            <Link href=\"/\">\n                <a>Go home</a>\n            </Link>\n        </p>\n    </Layout>\n}\n\n// @ts-ignore\nexport async function getServerSideProps(context) {\n    console.log(context)\n    const { loading, error, data } = await apolloClient.query({\n        \n    })\n    return {props: { loading, error, data }}\n}\n\n"]},"metadata":{},"sourceType":"module"}