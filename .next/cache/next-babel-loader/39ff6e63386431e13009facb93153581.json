{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport { withUrqlClient } from \"next-urql\";\nimport NextApp from \"next/app\";\nimport fetch from \"isomorphic-unfetch\";\nimport NavBar from '../components/NavBar/NavBar';\nimport Footer from '../components/Footer/Footer';\nimport { Router } from 'next/dist/client/router';\nimport Head from 'next/head';\nimport { SWRConfig } from 'swr';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport theme from '../theme';\nimport Nprogress from 'nprogress';\nimport 'nprogress/nprogress.css';\nimport { useStylesApp } from '../src/style';\nimport { request } from \"graphql-request\"; // the URL to /api/graphql\n\nexport const GRAPHQL_ENDPOINT = `http://localhost:3000/api/graphql`;\nconst API = 'http://localhost:3000/api/graphql';\n\nconst fetcher = (query, skip, take) => request(API, query, {\n  skip,\n  take\n});\n\nRouter.events.on('routeChangeStart', () => {\n  Nprogress.start();\n});\nRouter.events.on('routeChangeComplete', () => {\n  Nprogress.done();\n});\nRouter.events.on('routeChangeError', () => {\n  Nprogress.done();\n});\n\nconst App = ({\n  Component,\n  pageProps\n}) => {\n  const classes = useStylesApp();\n  React.useEffect(() => {\n    // Remove the server-side injected CSS.\n    const jssStyles = document.querySelector('#jss-server-side');\n\n    if (jssStyles) {\n      jssStyles.parentElement.removeChild(jssStyles);\n    }\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"My page\"), __jsx(\"meta\", {\n    name: \"viewport\",\n    content: \"minimum-scale=1, initial-scale=1, width=device-width\"\n  })), __jsx(ThemeProvider, {\n    theme: theme\n  }, __jsx(CssBaseline, null), __jsx(NavBar, null), __jsx(\"div\", {\n    className: classes.contentApp\n  }, __jsx(SWRConfig, {\n    value: {\n      refreshInterval: 8000,\n      dedupingInterval: 5000,\n      fetcher: fetcher\n    }\n  }, __jsx(Component, pageProps))), __jsx(Footer, null)));\n};\n\nApp.getInitialProps = async ctx => {\n  const appProps = await NextApp.getInitialProps(ctx);\n  return _objectSpread({}, appProps);\n};\n\nexport default withUrqlClient((_ssrExchange, _ctx) => ({\n  url: GRAPHQL_ENDPOINT,\n  fetch\n}))( // @ts-ignore\nApp);","map":null,"metadata":{},"sourceType":"module"}