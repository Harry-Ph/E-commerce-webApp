{"ast":null,"code":"var _jsxFileName = \"/Users/phan/Desktop/Integrify/fullstack-graphql-next-nexus-prisma/pages/products/index.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Products from \"./Products\";\nimport { gql } from \"@apollo/client\";\nimport client from \"./apollo\";\nconst ALL_PRODUCTS = gql`\n    query allProducts($skip: String!, $take: String!) {\n        allProducts(skip: $skip, take: $take) {\n            id\n            name\n        }\n    }\n`;\n\nconst AllProducts = ({\n  res\n}) => {\n  return __jsx(Products, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 12\n    }\n  });\n};\n\nexport const getStaticProps = async () => {\n  const {\n    loading,\n    data\n  } = await client.query({\n    query: ALL_PRODUCTS,\n    variables: {\n      skip: \"0\",\n      take: \"2\"\n    }\n  });\n  console.log(data);\n  return {\n    props: {\n      res: {\n        loading,\n        data\n      }\n    }\n  };\n};\nexport default AllProducts;","map":{"version":3,"sources":["/Users/phan/Desktop/Integrify/fullstack-graphql-next-nexus-prisma/pages/products/index.tsx"],"names":["Products","gql","client","ALL_PRODUCTS","AllProducts","res","getStaticProps","loading","data","query","variables","skip","take","console","log","props"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,YAArB;AAEA,SAAQC,GAAR,QAAkB,gBAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,MAAMC,YAAY,GAAGF,GAAI;;;;;;;CAAzB;;AASA,MAAMG,WAAW,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAA2D;AAC3E,SAAO,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACH,CAFD;;AAIA,OAAO,MAAMC,cAAc,GAAG,YAAY;AACtC,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAoB,MAAMN,MAAM,CAACO,KAAP,CAAa;AACzCA,IAAAA,KAAK,EAAEN,YADkC;AAEzCO,IAAAA,SAAS,EAAE;AACPC,MAAAA,IAAI,EAAE,GADC;AAEPC,MAAAA,IAAI,EAAE;AAFC;AAF8B,GAAb,CAAhC;AAOAC,EAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;AAEA,SAAO;AACHO,IAAAA,KAAK,EAAE;AACHV,MAAAA,GAAG,EAAE;AAAEE,QAAAA,OAAF;AAAWC,QAAAA;AAAX;AADF;AADJ,GAAP;AAKH,CAfM;AAiBP,eAAeJ,WAAf","sourcesContent":["import Products from \"./Products\";\nimport { InferGetStaticPropsType } from 'next'\nimport {gql} from \"@apollo/client\";\nimport client from \"./apollo\";\n\nconst ALL_PRODUCTS = gql`\n    query allProducts($skip: String!, $take: String!) {\n        allProducts(skip: $skip, take: $take) {\n            id\n            name\n        }\n    }\n`\n\nconst AllProducts = ({res}: InferGetStaticPropsType<typeof getStaticProps>) => {\n    return <Products/>\n}\n\nexport const getStaticProps = async () => {\n    const { loading, data } = await client.query({\n        query: ALL_PRODUCTS,\n        variables: {\n            skip: \"0\",\n            take: \"2\"\n        }\n    })\n    console.log(data)\n\n    return {\n        props: {\n            res: { loading, data }\n        },\n    }\n}\n\nexport default AllProducts\n"]},"metadata":{},"sourceType":"module"}