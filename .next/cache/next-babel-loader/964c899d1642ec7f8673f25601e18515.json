{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/phan/Desktop/Integrify/fullstack-graphql-next-nexus-prisma/pages/_app.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport { withUrqlClient } from \"next-urql\";\nimport NextApp from \"next/app\";\nimport fetch from \"isomorphic-unfetch\";\nimport NavBar from '../components/NavBar/NavBar';\nimport Footer from '../components/Footer/Footer';\nimport { Router } from 'next/dist/client/router';\nimport Head from 'next/head';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport theme from '../theme';\nimport { ApolloProvider } from \"@apollo/client\";\nimport client from \"./apollo\";\nimport Nprogress from 'nprogress';\nimport 'nprogress/nprogress.css'; // the URL to /api/graphql\n\nexport var GRAPHQL_ENDPOINT = \"http://localhost:3000/api/graphql\";\nRouter.events.on('routeChangeStart', function () {\n  Nprogress.start();\n});\nRouter.events.on('routeChangeComplete', function () {\n  Nprogress.done();\n});\nRouter.events.on('routeChangeError', function () {\n  Nprogress.done();\n});\n\nvar App = function App(_ref) {\n  _s();\n\n  var Component = _ref.Component,\n      pageProps = _ref.pageProps;\n  React.useEffect(function () {\n    // Remove the server-side injected CSS.\n    var jssStyles = document.querySelector('#jss-server-side');\n\n    if (jssStyles) {\n      jssStyles.parentElement.removeChild(jssStyles);\n    }\n  }, []);\n  return __jsx(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, __jsx(Head, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, \"My page\"), __jsx(\"meta\", {\n    name: \"viewport\",\n    content: \"minimum-scale=1, initial-scale=1, width=device-width\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  })), __jsx(ThemeProvider, {\n    theme: theme,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, __jsx(CssBaseline, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }), __jsx(NavBar, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }), __jsx(Main, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, __jsx(ApolloProvider, {\n    client: client,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 15\n    }\n  }, __jsx(Component, _extends({}, pageProps, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 19\n    }\n  }))), \");\"), __jsx(Footer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  })));\n};\n\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = App;\n\nApp.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(ctx) {\n    var appProps;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return NextApp.getInitialProps(ctx);\n\n          case 2:\n            appProps = _context.sent;\n            return _context.abrupt(\"return\", _objectSpread({}, appProps));\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default withUrqlClient(function (_ssrExchange, _ctx) {\n  return {\n    url: GRAPHQL_ENDPOINT,\n    fetch: fetch\n  };\n})( // @ts-ignore\nApp);\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/phan/Desktop/Integrify/fullstack-graphql-next-nexus-prisma/pages/_app.tsx"],"names":["React","withUrqlClient","NextApp","fetch","NavBar","Footer","Router","Head","ThemeProvider","CssBaseline","theme","ApolloProvider","client","Nprogress","GRAPHQL_ENDPOINT","events","on","start","done","App","Component","pageProps","useEffect","jssStyles","document","querySelector","parentElement","removeChild","getInitialProps","ctx","appProps","_ssrExchange","_ctx","url"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { withUrqlClient, NextUrqlAppContext } from \"next-urql\";\nimport NextApp, { AppProps } from \"next/app\";\nimport fetch from \"isomorphic-unfetch\";\nimport NavBar from '../components/NavBar/NavBar'\nimport Footer from '../components/Footer/Footer'\nimport {Router} from 'next/dist/client/router'\n\nimport Head from 'next/head';\n\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport theme from '../theme';\nimport {ApolloProvider} from \"@apollo/client\";\nimport client from \"./apollo\";\nimport Nprogress from 'nprogress';\nimport 'nprogress/nprogress.css';\n\n// the URL to /api/graphql\nexport const GRAPHQL_ENDPOINT = `http://localhost:3000/api/graphql`;\n\nRouter.events.on('routeChangeStart', ()=> {\n    Nprogress.start()\n})\n\nRouter.events.on('routeChangeComplete', ()=> {\n    Nprogress.done();\n})\n\nRouter.events.on('routeChangeError', ()=> {\n    Nprogress.done();\n})\n\nconst App = ({ Component, pageProps }: AppProps) => {\n  React.useEffect(() => {\n    // Remove the server-side injected CSS.\n    const jssStyles = document.querySelector('#jss-server-side');\n    if (jssStyles) {\n      jssStyles.parentElement!.removeChild(jssStyles);\n    }\n  }, []);\n\n  return  <React.Fragment>\n      <Head>\n        <title>My page</title>\n        <meta name=\"viewport\" content=\"minimum-scale=1, initial-scale=1, width=device-width\" />\n      </Head>\n      <ThemeProvider theme={theme}>\n        {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n        <CssBaseline />\n        <NavBar/>\n          <Main>\n              <ApolloProvider client={client}>\n                  <Component {...pageProps} />\n              </ApolloProvider>);\n          </Main>\n        <Footer />\n      </ThemeProvider>\n    </React.Fragment>\n};\n\nApp.getInitialProps = async (ctx: NextUrqlAppContext) => {\n  const appProps = await NextApp.getInitialProps(ctx);\n  return { ...appProps };\n};\n\nexport default withUrqlClient((_ssrExchange, _ctx) => ({\n  url: GRAPHQL_ENDPOINT,\n  fetch,\n}))(\n  // @ts-ignore\n  App\n);\n"]},"metadata":{},"sourceType":"module"}