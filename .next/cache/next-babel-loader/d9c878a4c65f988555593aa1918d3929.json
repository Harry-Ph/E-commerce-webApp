{"ast":null,"code":"var _jsxFileName = \"/Users/phan/Desktop/Integrify/fullstack-graphql-next-nexus-prisma/pages/_app.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\nimport { withUrqlClient } from \"next-urql\";\nimport NextApp from \"next/app\";\nimport fetch from \"isomorphic-unfetch\";\nimport NavBar from '../components/NavBar/NavBar';\nimport Footer from '../components/Footer/Footer';\nimport { Router } from 'next/dist/client/router';\nimport Head from 'next/head';\nimport { SWRConfig } from 'swr';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport theme from '../theme';\nimport Nprogress from 'nprogress';\nimport 'nprogress/nprogress.css';\nimport { useStylesApp } from '../src/style';\nimport { request } from \"graphql-request\"; // the URL to /api/graphql\n\nexport const GRAPHQL_ENDPOINT = `http://localhost:3000/api/graphql`;\nconst API = 'http://localhost:3000/api/graphql';\n\nconst fetcher = (query, skip, take) => request(API, query, {\n  skip,\n  take\n});\n\nRouter.events.on('routeChangeStart', () => {\n  Nprogress.start();\n});\nRouter.events.on('routeChangeComplete', () => {\n  Nprogress.done();\n});\nRouter.events.on('routeChangeError', () => {\n  Nprogress.done();\n});\n\nconst App = ({\n  Component,\n  pageProps\n}) => {\n  const classes = useStylesApp();\n  React.useEffect(() => {\n    // Remove the server-side injected CSS.\n    const jssStyles = document.querySelector('#jss-server-side');\n\n    if (jssStyles) {\n      jssStyles.parentElement.removeChild(jssStyles);\n    }\n  }, []);\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, \"My page\"), __jsx(\"meta\", {\n    name: \"viewport\",\n    content: \"minimum-scale=1, initial-scale=1, width=device-width\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  })), __jsx(ThemeProvider, {\n    theme: theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, __jsx(CssBaseline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }), __jsx(NavBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    className: classes.contentApp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, __jsx(SWRConfig, {\n    value: {\n      refreshInterval: 8000,\n      dedupingInterval: 5000,\n      fetcher: fetcher\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, __jsx(Component, _extends({}, pageProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }\n  })))), __jsx(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  })));\n};\n\nApp.getInitialProps = async ctx => {\n  const appProps = await NextApp.getInitialProps(ctx);\n  return _objectSpread({}, appProps);\n};\n\nexport default withUrqlClient((_ssrExchange, _ctx) => ({\n  url: GRAPHQL_ENDPOINT,\n  fetch\n}))( // @ts-ignore\nApp);","map":{"version":3,"sources":["/Users/phan/Desktop/Integrify/fullstack-graphql-next-nexus-prisma/pages/_app.tsx"],"names":["React","withUrqlClient","NextApp","fetch","NavBar","Footer","Router","Head","SWRConfig","ThemeProvider","CssBaseline","theme","Nprogress","useStylesApp","request","GRAPHQL_ENDPOINT","API","fetcher","query","skip","take","events","on","start","done","App","Component","pageProps","classes","useEffect","jssStyles","document","querySelector","parentElement","removeChild","contentApp","refreshInterval","dedupingInterval","getInitialProps","ctx","appProps","_ssrExchange","_ctx","url"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { withUrqlClient, NextUrqlAppContext } from \"next-urql\";\nimport NextApp, { AppProps } from \"next/app\";\nimport fetch from \"isomorphic-unfetch\";\nimport NavBar from '../components/NavBar/NavBar'\nimport Footer from '../components/Footer/Footer'\nimport {Router} from 'next/dist/client/router'\nimport Head from 'next/head';\nimport  { SWRConfig } from 'swr'\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport theme from '../theme';\nimport Nprogress from 'nprogress';\nimport 'nprogress/nprogress.css';\n\nimport {useStylesApp} from '../src/style'\nimport {request} from \"graphql-request\";\n\n// the URL to /api/graphql\nexport const GRAPHQL_ENDPOINT = `http://localhost:3000/api/graphql`;\n\nconst API = 'http://localhost:3000/api/graphql'\nconst fetcher = (query: any, skip: string, take: string) => request(API, query, {skip, take});\n\nRouter.events.on('routeChangeStart', ()=> {\n    Nprogress.start()\n})\n\nRouter.events.on('routeChangeComplete', ()=> {\n    Nprogress.done();\n})\n\nRouter.events.on('routeChangeError', ()=> {\n    Nprogress.done();\n})\n\nconst App = ({ Component, pageProps }: AppProps) => {\n    const classes = useStylesApp()\n  React.useEffect(() => {\n    // Remove the server-side injected CSS.\n    const jssStyles = document.querySelector('#jss-server-side');\n    if (jssStyles) {\n      jssStyles.parentElement!.removeChild(jssStyles);\n    }\n  }, []);\n\n  return  <React.Fragment>\n      <Head>\n        <title>My page</title>\n        <meta name=\"viewport\" content=\"minimum-scale=1, initial-scale=1, width=device-width\" />\n      </Head>\n      <ThemeProvider theme={theme}>\n        {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n        <CssBaseline />\n        <NavBar/>\n          <div className={classes.contentApp}>\n            <SWRConfig\n              value={{\n                refreshInterval: 8000,\n                dedupingInterval: 5000,\n                fetcher: fetcher\n              }}\n            >\n              <Component {...pageProps} />\n            </SWRConfig>\n          </div>\n        <Footer />\n      </ThemeProvider>\n    </React.Fragment>\n};\n\nApp.getInitialProps = async (ctx: NextUrqlAppContext) => {\n  const appProps = await NextApp.getInitialProps(ctx);\n  return { ...appProps };\n};\n\nexport default withUrqlClient((_ssrExchange, _ctx) => ({\n  url: GRAPHQL_ENDPOINT,\n  fetch,\n}))(\n  // @ts-ignore\n  App\n);\n"]},"metadata":{},"sourceType":"module"}