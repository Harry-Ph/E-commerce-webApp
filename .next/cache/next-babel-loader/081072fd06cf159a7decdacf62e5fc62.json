{"ast":null,"code":"var _jsxFileName = \"/Users/phan/Desktop/Integrify/fullstack-graphql-next-nexus-prisma/pages/users/index.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport Link from 'next/link';\nimport Layout from '../../components/Layout';\nimport gql from 'graphql-tag';\nimport client from '../apollo';\nimport Table from '../../components/Table';\nimport { Box } from '@material-ui/core';\nimport Loading from '../../components/Loading';\nimport { useRouter } from 'next/router';\nimport { Pagination, PaginationItem, Skeleton } from '@material-ui/lab';\nimport { PrismaClient } from '@prisma/client';\nconst prisma2 = new PrismaClient();\nexport const AllUsersQuery = gql`\n  query AllUsers($skip: String!, $take: String!) {\n    allUsers(skip: $skip, take: $take) {\n      id\n      username\n      email\n      password\n      role\n      status\n    }\n  }\n`;\n\nconst WithStaticProps = ({\n  loading,\n  users,\n  numberPages\n}) => {\n  const router = useRouter();\n\n  if (loading || !users) {\n    return __jsx(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return __jsx(Layout, {\n    title: \"Users List | Next.js + TypeScript Example\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, \"Users List\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, \"Example fetching data from inside \", __jsx(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 41\n    }\n  }, \"getStaticProps()\"), \".\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, \"You are currently on: /users\"), __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, numberPages > 0 || !loading ? __jsx(Pagination, {\n    page: parseInt(router.query.page || '1'),\n    count: numberPages,\n    defaultPage: 1,\n    renderItem: item => __jsx(PaginationItem, _extends({\n      component: MaterialUiLink,\n      query: router.query,\n      item: item\n    }, item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 44\n    }\n  }) : __jsx(Skeleton, {\n    variant: \"rect\",\n    width: '30vw',\n    height: '28px',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  })), __jsx(Table, {\n    items: users,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, __jsx(Link, {\n    href: \"/api/books\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, \"Go home\"))));\n};\n\nexport default WithStaticProps;\nexport function MaterialUiLink(_ref) {\n  let {\n    item,\n    query\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"item\", \"query\"]);\n\n  return __jsx(Link, {\n    href: {\n      // users?page=1\n      pathname: '/users',\n      query: _objectSpread(_objectSpread({}, query), {}, {\n        page: item.page\n      })\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }, __jsx(\"a\", _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  })));\n}\nexport const getServerSideProps = async ctx => {\n  var _ctx$query;\n\n  const pageQuery = ((_ctx$query = ctx.query) === null || _ctx$query === void 0 ? void 0 : _ctx$query.page) || 1;\n  ctx.req;\n  const take = '3';\n  const totalUsers = await prisma2.ppl.findMany();\n  const usersArray = Object.keys(totalUsers).map(k => totalUsers[parseInt(k)]);\n  const numberPages = Math.ceil(((usersArray === null || usersArray === void 0 ? void 0 : usersArray.length) || 0) / +take);\n  const first = String((parseInt(pageQuery) - 1) * +take);\n  const {\n    loading,\n    data\n  } = await client.query({\n    query: AllUsersQuery,\n    variables: {\n      skip: first,\n      take: take\n    }\n  });\n  return {\n    props: {\n      loading,\n      users: data === null || data === void 0 ? void 0 : data.allUsers,\n      numberPages\n    }\n  };\n};","map":{"version":3,"sources":["/Users/phan/Desktop/Integrify/fullstack-graphql-next-nexus-prisma/pages/users/index.tsx"],"names":["Link","Layout","gql","client","Table","Box","Loading","useRouter","Pagination","PaginationItem","Skeleton","PrismaClient","prisma2","AllUsersQuery","WithStaticProps","loading","users","numberPages","router","parseInt","query","page","item","MaterialUiLink","props","pathname","getServerSideProps","ctx","pageQuery","req","take","totalUsers","ppl","findMany","usersArray","Object","keys","map","k","Math","ceil","length","first","String","data","variables","skip","allUsers"],"mappings":"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","sourcesContent":["import {  GetServerSideProps } from 'next'\nimport Link from 'next/link'\n\nimport { Ppl } from '../../interfaces'\nimport Layout from '../../components/Layout'\nimport gql from 'graphql-tag'\nimport client from '../apollo'\nimport Table from '../../components/Table';\nimport { Box } from '@material-ui/core'\nimport Loading from '../../components/Loading'\nimport { useRouter } from 'next/router'\nimport { Pagination, PaginationItem, Skeleton, PaginationRenderItemParams } from '@material-ui/lab'\nimport { ParsedUrlQuery } from 'querystring'\nimport { PrismaClient } from '@prisma/client'\nconst prisma2 = new PrismaClient()\n\ntype Props = {\n  users: Ppl[]\n  numberPages: number\n  loading: boolean\n}\n\nexport const AllUsersQuery = gql`\n  query AllUsers($skip: String!, $take: String!) {\n    allUsers(skip: $skip, take: $take) {\n      id\n      username\n      email\n      password\n      role\n      status\n    }\n  }\n`;\n\n\n\nconst WithStaticProps = ({ loading, users, numberPages }: Props) => {\n  const router = useRouter();\n  if( loading || !users) {\n    return <Loading/>\n  }\n  return (\n    <Layout title=\"Users List | Next.js + TypeScript Example\">\n    <h1>Users List</h1>\n    <p>\n      Example fetching data from inside <code>getStaticProps()</code>.\n    </p>\n    <p>You are currently on: /users</p>\n    \n    <Box>\n        {\n          (numberPages > 0 || !loading) ? (<Pagination\n              page={parseInt(router.query.page as string || '1')}\n              count={numberPages}\n              defaultPage={1}\n              renderItem={(item) => (\n                <PaginationItem\n                  component={MaterialUiLink}\n                  query={router.query}\n                  item={item}\n                  {...item}\n                />\n              )}\n            />) :\n            <Skeleton variant=\"rect\" width={'30vw'} height={'28px'} />\n        }\n    </Box>\n\n    <Table items={users} />\n    <p>\n      <Link href=\"/api/books\">\n        <a>Go home</a>\n      </Link>\n    </p>\n  </Layout>\n  );\n  }\n\n\n\nexport default WithStaticProps\n\nexport interface MaterialUiLinkProps {\n  item: PaginationRenderItemParams;\n  query: ParsedUrlQuery;\n}\n\nexport function MaterialUiLink({ item, query, ...props }: MaterialUiLinkProps) {\n  return (\n    <Link\n      href={\n        { // users?page=1\n          pathname: '/users',\n          query: {...query, page: item.page}\n        }\n      }\n    >\n      <a {...props}></a>\n    </Link>\n  );\n}\n\nexport const getServerSideProps:GetServerSideProps = async (ctx) => {\n  const pageQuery = (ctx.query?.page || 1) as string;\nctx.req\n  const take = '3';\n  const totalUsers = await prisma2.ppl.findMany();\n  const usersArray = Object.keys(totalUsers).map((k) => totalUsers[parseInt(k)])\n  const numberPages = Math.ceil((usersArray?.length || 0) as number / +take) as number;\n \n\n  const first = String((parseInt(pageQuery) -1) * (+take))\n  const { loading, data } = await client.query({\n            query: AllUsersQuery,\n            variables: {\n              skip: first,\n              take: take\n            }\n        })\n\n  return {\n    props: {\n      loading,\n      users: data?.allUsers,\n      numberPages\n    }\n  }\n}"]},"metadata":{},"sourceType":"module"}