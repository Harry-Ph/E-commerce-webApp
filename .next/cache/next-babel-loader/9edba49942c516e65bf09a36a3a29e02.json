{"ast":null,"code":"var _jsxFileName = \"/Users/phan/Desktop/Integrify/fullstack-graphql-next-nexus-prisma/pages/users/register/index.tsx\";\nvar __jsx = React.createElement;\nimport FormData from '../../../components/Form';\nimport Layout from '../../../components/Layout';\nimport React from \"react\";\nimport client from \"../../apollo\";\nimport { gql } from \"@apollo/client\";\nconst CREATE_NEW_USER = gql`\n    query allProducts($skip: String!, $take: String!) {\n        allProducts(skip: $skip, take: $take) {\n            id\n            name\n        }\n    }\n`;\n\nconst RegisterUser = () => __jsx(Layout, {\n  title: \"Home | Next.js + TypeScript Example\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }\n}, __jsx(FormData, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }\n}));\n\nexport async function getServerSideProps(context) {\n  // console.log('context--->', context.req)\n  const {\n    loading,\n    data\n  } = await client.query({\n    query: CREATE_NEW_USER,\n    variables: {\n      skip: \"0\",\n      take: \"2\"\n    }\n  });\n  console.log('aaaaaaa--->', data);\n  return {\n    props: {\n      loading,\n      data\n    }\n  };\n}\nexport default RegisterUser;","map":{"version":3,"sources":["/Users/phan/Desktop/Integrify/fullstack-graphql-next-nexus-prisma/pages/users/register/index.tsx"],"names":["FormData","Layout","React","client","gql","CREATE_NEW_USER","RegisterUser","getServerSideProps","context","loading","data","query","variables","skip","take","console","log","props"],"mappings":";;AAAA,OAAOA,QAAP,MAAqB,0BAArB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAAQC,GAAR,QAAkB,gBAAlB;AAGA,MAAMC,eAAe,GAAGD,GAAI;;;;;;;CAA5B;;AAaA,MAAME,YAAY,GAAG,MACjB,MAAC,MAAD;AAAQ,EAAA,KAAK,EAAC,qCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,CADJ;;AAMA,OAAO,eAAeC,kBAAf,CAAkCC,OAAlC,EAA2C;AAC9C;AACA,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAoB,MAAMP,MAAM,CAACQ,KAAP,CAAa;AACzCA,IAAAA,KAAK,EAAEN,eADkC;AAEzCO,IAAAA,SAAS,EAAE;AACPC,MAAAA,IAAI,EAAE,GADC;AAEPC,MAAAA,IAAI,EAAE;AAFC;AAF8B,GAAb,CAAhC;AAOAC,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BN,IAA3B;AACA,SAAO;AAACO,IAAAA,KAAK,EAAE;AAAER,MAAAA,OAAF;AAAWC,MAAAA;AAAX;AAAR,GAAP;AACH;AAED,eAAeJ,YAAf","sourcesContent":["import FormData from '../../../components/Form'\nimport Layout from '../../../components/Layout'\nimport React from \"react\";\nimport client from \"../../apollo\";\nimport {gql} from \"@apollo/client\";\nimport {Product} from \"../../../interfaces\";\n\nconst CREATE_NEW_USER = gql`\n    query allProducts($skip: String!, $take: String!) {\n        allProducts(skip: $skip, take: $take) {\n            id\n            name\n        }\n    }\n`\n\nexport interface  IProducts {\n    products: Product[]\n}\n\nconst RegisterUser = () => (\n    <Layout title=\"Home | Next.js + TypeScript Example\">\n        <FormData />\n    </Layout>\n);\n\nexport async function getServerSideProps(context) {\n    // console.log('context--->', context.req)\n    const { loading, data } = await client.query({\n        query: CREATE_NEW_USER,\n        variables: {\n            skip: \"0\",\n            take: \"2\"\n        }\n    })\n    console.log('aaaaaaa--->', data)\n    return {props: { loading, data }}\n}\n\nexport default RegisterUser\n"]},"metadata":{},"sourceType":"module"}