{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/phan/Desktop/Integrify/fullstack-graphql-next-nexus-prisma/components/Modal/index.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { Modal, Backdrop, Fade, Button, CircularProgress, Box, FormGroup, TextField } from '@material-ui/core';\nimport { request } from \"graphql-request\";\nimport { mutate, trigger } from 'swr';\nimport useStyles from './style';\nimport { useRouter } from \"next/router\";\nimport { ErrorMessage, Field, Form, Formik } from \"formik\";\nimport { object, string } from \"yup\";\n\nvar sleep = function sleep(time) {\n  return new Promise(function (acc) {\n    return setTimeout(acc, time);\n  });\n};\n\nvar fetcher = function fetcher(query, skip, take) {\n  return request(API, query, {\n    skip: skip,\n    take: take\n  });\n};\n/* GraphQL */\n\n\nvar REMOVE_PRODUCT =\n/* GraphQL */\n\"\\n    mutation removeProductById($id: String!) {\\n        removeProductById(id: $id) {\\n            id\\n            name\\n        }\\n    }\\n\";\nvar ALL_PRODUCTS2 =\n/* GraphQL */\n\"\\n  query allProducts($skip: String!, $take: String!) {\\n    allProducts(skip: $skip, take: $take) {\\n      id\\n      name\\n    }\\n  }\\n\";\n/* GraphQL */\n\nvar CREATE_PRODUCT2 =\n/* GraphQL */\n\"\\n  mutation createNewOneProduct($name: String!) {\\n    createNewOneProduct(name: $name) {\\n      id\\n      name\\n    }\\n  }\\n\";\nvar API = 'http://localhost:3000/api/graphql';\nvar initialValues = {\n  name: ''\n};\nvar take = '9'; // @ts-ignore\n\nexport default function TransitionsModal(_ref) {\n  _s();\n\n  var _router$query,\n      _this = this;\n\n  var products = _ref.products,\n      redirectRouting = _ref.redirectRouting,\n      currentPage = _ref.currentPage,\n      handleOpen = _ref.handleOpen,\n      product = _ref.product,\n      handleClose = _ref.handleClose,\n      open = _ref.open,\n      isEdit = _ref.isEdit;\n  var classes = useStyles();\n\n  var _useState = useState(false),\n      isLoading = _useState[0],\n      setIsLoading = _useState[1];\n\n  var router = useRouter();\n  var pageQuery = (_router$query = router.query) === null || _router$query === void 0 ? void 0 : _router$query.page;\n  var skip = String((parseInt(pageQuery) - 1) * +take);\n\n  var handleRemoveInModal = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(e) {\n      var id, productsAfterRemoved;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              e.preventDefault();\n              e.stopPropagation();\n              _context2.next = 4;\n              return setIsLoading(true);\n\n            case 4:\n              _context2.next = 6;\n              return sleep(2500);\n\n            case 6:\n              id = product.id;\n              productsAfterRemoved = products === null || products === void 0 ? void 0 : products.filter(function (p) {\n                return p.id != id;\n              });\n              _context2.next = 10;\n              return mutate(API);\n\n            case 10:\n              mutate(API, /*#__PURE__*/function () {\n                var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(products) {\n                  var list;\n                  return _regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          _context.next = 2;\n                          return fetcher(ALL_PRODUCTS2, skip, take);\n\n                        case 2:\n                          list = _context.sent;\n                          return _context.abrupt(\"return\", [products].concat(_toConsumableArray(productsAfterRemoved)));\n\n                        case 4:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee);\n                }));\n\n                return function (_x2) {\n                  return _ref3.apply(this, arguments);\n                };\n              }());\n              _context2.next = 13;\n              return request(API, REMOVE_PRODUCT, {\n                id: id\n              });\n\n            case 13:\n              _context2.next = 15;\n              return trigger(API);\n\n            case 15:\n              _context2.next = 17;\n              return handleClose(e);\n\n            case 17:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function handleRemoveInModal(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, __jsx(Modal, {\n    className: classes.modal,\n    open: open,\n    onClose: handleClose,\n    closeAfterTransition: true,\n    BackdropComponent: Backdrop,\n    BackdropProps: {\n      timeout: 500\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, __jsx(Fade, {\n    \"in\": open,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 21\n    }\n  }, __jsx(\"h2\", {\n    id: \"transition-modal-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 25\n    }\n  }, isEdit ? 'EDIT' : 'DELETE', \" THIS PRODUCT\"), __jsx(\"p\", {\n    id: \"transition-modal-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 25\n    }\n  }, \"Do you want to \", isEdit ? 'edit' : 'delete', \" this item?.\"), isEdit ? __jsx(Formik, {\n    validationSchema: object({\n      name: string().required().min(2).max(50)\n    }),\n    initialValues: initialValues,\n    onSubmit: function onSubmit() {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 29\n    }\n  }, function (_ref4) {\n    var isSubmitting = _ref4.isSubmitting;\n    return __jsx(Form, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 37\n      }\n    }, __jsx(Box, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 41\n      }\n    }, __jsx(FormGroup, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 45\n      }\n    }, __jsx(Field, {\n      name: \"name\",\n      as: TextField,\n      label: \"Name\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 49\n      }\n    }), __jsx(ErrorMessage, {\n      name: \"name\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 49\n      }\n    }))), __jsx(Button, {\n      size: \"small\",\n      variant: \"contained\",\n      color: \"primary\",\n      type: \"submit\",\n      disabled: isSubmitting,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 41\n      }\n    }, \"SUBMIT\"), __jsx(Button, {\n      size: \"small\",\n      variant: \"outlined\",\n      color: \"default\",\n      type: \"submit\",\n      onClick: handleClose,\n      disabled: isLoading,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 41\n      }\n    }, \"CANCEL\"));\n  }) : __jsx(React.Fragment, null, __jsx(Button, {\n    size: \"small\",\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleRemoveInModal,\n    startIcon: isLoading ? __jsx(CircularProgress, {\n      size: \"1rem\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 60\n      }\n    }) : null,\n    disabled: isLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 33\n    }\n  }, \"REMOVE\"), __jsx(Button, {\n    size: \"small\",\n    variant: \"outlined\",\n    color: \"default\",\n    type: \"submit\",\n    onClick: handleClose,\n    disabled: isLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 33\n    }\n  }, \"CANCEL\"))))));\n}\n\n_s(TransitionsModal, \"k4RA8KA6EoJzJxtrORecuKSugEc=\", false, function () {\n  return [useStyles, useRouter];\n});\n\n_c = TransitionsModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"TransitionsModal\");","map":{"version":3,"sources":["/Users/phan/Desktop/Integrify/fullstack-graphql-next-nexus-prisma/components/Modal/index.tsx"],"names":["React","useState","Modal","Backdrop","Fade","Button","CircularProgress","Box","FormGroup","TextField","request","mutate","trigger","useStyles","useRouter","ErrorMessage","Field","Form","Formik","object","string","sleep","time","Promise","acc","setTimeout","fetcher","query","skip","take","API","REMOVE_PRODUCT","ALL_PRODUCTS2","CREATE_PRODUCT2","initialValues","name","TransitionsModal","products","redirectRouting","currentPage","handleOpen","product","handleClose","open","isEdit","classes","isLoading","setIsLoading","router","pageQuery","page","String","parseInt","handleRemoveInModal","e","preventDefault","stopPropagation","id","productsAfterRemoved","filter","p","list","modal","timeout","paper","required","min","max","isSubmitting"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport {Modal, Backdrop, Fade, Button, CircularProgress, Box, FormGroup, TextField, MenuItem} from '@material-ui/core';\n\nimport {request} from \"graphql-request\";\nimport useSWR, {mutate, trigger} from 'swr'\nimport useStyles from './style';\nimport Router, {useRouter} from \"next/router\";\nimport {Product} from \"../../interfaces\";\nimport {ErrorMessage, Field, Form, Formik, FormikConfig, FormikValues} from \"formik\";\nimport Loading from \"../Loading\";\nimport {object, string} from \"yup\";\n\nconst sleep = (time) => new Promise((acc) => setTimeout(acc, time));\nconst fetcher = (query: any, skip: string, take: string) =>\n  request(API, query, { skip, take });\n\n/* GraphQL */\nconst REMOVE_PRODUCT = /* GraphQL */`\n    mutation removeProductById($id: String!) {\n        removeProductById(id: $id) {\n            id\n            name\n        }\n    }\n`\n\nconst ALL_PRODUCTS2 = /* GraphQL */ `\n  query allProducts($skip: String!, $take: String!) {\n    allProducts(skip: $skip, take: $take) {\n      id\n      name\n    }\n  }\n`;\n\n/* GraphQL */\nconst CREATE_PRODUCT2 = /* GraphQL */ `\n  mutation createNewOneProduct($name: String!) {\n    createNewOneProduct(name: $name) {\n      id\n      name\n    }\n  }\n`;\n\nconst API = 'http://localhost:3000/api/graphql'\n\nexport interface IModel {\n  currentPage: any\n  handleOpen: (e: any)=> void\n  product: Product\n  handleClose: (e: any)=> void\n  redirectRouting:  (currentPage: string)=> void\n  open: boolean\n  isEdit: boolean\n  products: Product[]\n}\n\nconst initialValues = {\n    name: '',\n}\nconst take = '9'\n\n// @ts-ignore\nexport default function TransitionsModal({products, redirectRouting, currentPage, handleOpen, product, handleClose, open, isEdit}: IModel) {\n    const classes = useStyles();\n    const [isLoading, setIsLoading] = useState(false);\n    const router = useRouter();\n    const pageQuery = router.query?.page\n    const skip = String((parseInt(pageQuery) - 1) * +take);\n    const handleRemoveInModal = async (e) => {\n\n      e.preventDefault();\n      e.stopPropagation();\n\n      await setIsLoading(true)\n      await sleep(2500);\n\n      const {id} = product;\n\n      const productsAfterRemoved: Product[] = products?.filter((p) => p!.id != id )\n      await mutate(API);\n      mutate(API, async products => {\n        const list = await fetcher(ALL_PRODUCTS2, skip as string, take as string);\n        return [products, ...productsAfterRemoved]\n      })\n      await request(API, REMOVE_PRODUCT, {id})\n      await trigger(API);\n\n      await handleClose(e);\n\n      // await redirectRouting(String(currentPage))\n      // await Router.replace(`/products/${currentPage}`,  `/products/${currentPage}`, {shallow: true})\n    }\n\n    return (\n        <div>\n            <Modal\n                className={classes.modal}\n                open={open}\n                onClose={handleClose}\n                closeAfterTransition\n                BackdropComponent={Backdrop}\n                BackdropProps={{\n                    timeout: 500,\n                }}\n            >\n                <Fade in={open}>\n                    <div className={classes.paper}>\n                        <h2 id=\"transition-modal-title\">{isEdit ? 'EDIT' : 'DELETE'} THIS PRODUCT</h2>\n                        <p id=\"transition-modal-description\">Do you want to {isEdit ? 'edit' : 'delete'} this item?.</p>\n                        {isEdit ?\n                            <Formik\n                                validationSchema={\n                                    object({\n                                        name: string().required().min(2).max(50),\n                                    })\n                                }\n                                initialValues={initialValues}\n                                onSubmit={() => {}}>\n                                {({isSubmitting}) => (\n                                    <Form>\n                                        <Box>\n                                            <FormGroup>\n                                                <Field name=\"name\" as={TextField} label=\"Name\"/>\n                                                <ErrorMessage name=\"name\" />\n                                            </FormGroup>\n                                        </Box>\n                                        <Button size=\"small\"\n                                                variant=\"contained\"\n                                                color=\"primary\"\n                                                type=\"submit\" disabled={isSubmitting}>SUBMIT</Button>\n                                        <Button\n                                            size=\"small\"\n                                            variant=\"outlined\"\n                                            color=\"default\"\n                                            type=\"submit\"\n                                            onClick={handleClose}\n                                            disabled={isLoading}\n                                        >CANCEL</Button>\n                                    </Form>\n                                )}\n                            </Formik>\n                            :\n                            <>\n                                <Button\n                                    size=\"small\"\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={handleRemoveInModal}\n                                    startIcon={isLoading ? <CircularProgress size=\"1rem\" /> : null}\n                                    disabled={isLoading}\n                                >REMOVE</Button>\n                                <Button\n                                    size=\"small\"\n                                    variant=\"outlined\"\n                                    color=\"default\"\n                                    type=\"submit\"\n                                    onClick={handleClose}\n                                    disabled={isLoading}\n                                >CANCEL</Button>\n                            </>\n                        }\n                    </div>\n                </Fade>\n            </Modal>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}