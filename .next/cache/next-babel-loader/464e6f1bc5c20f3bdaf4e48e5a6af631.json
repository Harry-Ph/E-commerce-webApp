{"ast":null,"code":"var _jsxFileName = \"/Users/phan/Desktop/Integrify/fullstack-graphql-next-nexus-prisma/pages/products/index.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Loading from \"../../components/Loading\";\nimport { gql } from \"@apollo/client\";\nimport Router from \"next/router\";\nimport { PrismaClient } from \"@prisma/client\";\nconst prisma2 = new PrismaClient();\n;\nconst ALL_PRODUCTS = gql`\n    query allProducts($skip: String!, $take: String!) {\n        allProducts(skip: $skip, take: $take) {\n            id\n            name\n        }\n    }\n`;\nexport default function Products() {\n  return __jsx(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 10\n    }\n  });\n}\nexport const getServerSideProps = async ctx => {\n  await Router.replace('/products/1', '/products/1', {\n    shallow: true\n  });\n  return {\n    props: {\n      product: null\n    }\n  };\n};","map":{"version":3,"sources":["/Users/phan/Desktop/Integrify/fullstack-graphql-next-nexus-prisma/pages/products/index.tsx"],"names":["React","Loading","gql","Router","PrismaClient","prisma2","ALL_PRODUCTS","Products","getServerSideProps","ctx","replace","shallow","props","product"],"mappings":";;AAAA,OAAOA,KAAP,MAA8B,OAA9B;AAKA,OAAOC,OAAP,MAAoB,0BAApB;AACA,SAAQC,GAAR,QAAiC,gBAAjC;AAIA,OAAOC,MAAP,MAAgC,aAAhC;AAIA,SAASC,YAAT,QAA6B,gBAA7B;AAGA,MAAMC,OAAO,GAAG,IAAID,YAAJ,EAAhB;AAIA;AACA,MAAME,YAAY,GAAGJ,GAAI;;;;;;;CAAzB;AAeA,eAAe,SAASK,QAAT,GAAoB;AACjC,SAAO,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAED;AAED,OAAO,MAAMC,kBAAsC,GAAG,MAAOC,GAAP,IAAe;AACnE,QAAMN,MAAM,CAACO,OAAP,CAAe,aAAf,EAA+B,aAA/B,EAA8C;AAACC,IAAAA,OAAO,EAAE;AAAV,GAA9C,CAAN;AACA,SAAO;AACLC,IAAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAE;AADJ;AADF,GAAP;AAKD,CAPM","sourcesContent":["import React, {useState} from 'react'\nimport useStyles from './style'\nimport { PaginationRenderItemParams } from '@material-ui/lab';\nimport { Card, CardMedia, CardContent, Typography, CardActionArea, CardActions, Button } from '@material-ui/core'\nimport {GetServerSideProps, GetStaticPaths, GetStaticProps} from \"next\";\nimport Loading from \"../../components/Loading\";\nimport {gql, NetworkStatus} from \"@apollo/client\";\nimport client from \"../apollo\";\nimport {Product} from \"../../interfaces\";\nimport Link from \"next/link\";\nimport Router, {useRouter} from \"next/router\";\nimport Pagination from '@material-ui/lab/Pagination';\nimport PaginationItem from '@material-ui/lab/PaginationItem';\nimport { ParsedUrlQuery } from 'querystring';\nimport { PrismaClient } from \"@prisma/client\"\nimport Skeleton from \"@material-ui/lab/Skeleton\";\nimport Box from \"@material-ui/core/Box\";\nconst prisma2 = new PrismaClient()\nimport Modal from \"../../components/Modal\";\n\n\n;\nconst ALL_PRODUCTS = gql`\n    query allProducts($skip: String!, $take: String!) {\n        allProducts(skip: $skip, take: $take) {\n            id\n            name\n        }\n    }\n`\n\nexport interface IProducts {\n  products: Product[]\n  numberPages: number,\n  networkStatus: any\n}\n\nexport default function Products() {\n  return <Loading/>\n\n}\n\nexport const getServerSideProps: GetServerSideProps = async (ctx) => {\n  await Router.replace('/products/1',  '/products/1', {shallow: true})\n  return {\n    props: {\n      product: null,\n    },\n  }\n}"]},"metadata":{},"sourceType":"module"}