{"ast":null,"code":"var _jsxFileName = \"/Users/phan/Desktop/Integrify/fullstack-graphql-next-nexus-prisma/pages/products/details/[id].tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Button, Card, CardActions, CardContent, CardMedia, Typography } from \"@material-ui/core\";\nimport useStyles from '../style';\nexport var __N_SSG = true;\nexport default function ProductDetails() {\n  _s();\n\n  var classes = useStyles();\n  return __jsx(Card, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, __jsx(CardMedia, {\n    className: classes.img,\n    image: \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRROrogs_AtLLQ3iO8Ji3UsVNGhqgGKCqOt7Q&usqp=CAU\",\n    title: \"Live from space album cover\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    className: classes.details,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, __jsx(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, __jsx(Typography, {\n    component: \"h1\",\n    variant: \"h3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, \"Name\"), __jsx(Typography, {\n    variant: \"subtitle1\",\n    color: \"textSecondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, \"Price\"), __jsx(Typography, {\n    variant: \"h5\",\n    color: \"textSecondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, \"isAvailable\"), __jsx(Typography, {\n    variant: \"subtitle2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, \"desc\")), __jsx(CardActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, __jsx(Button, {\n    size: \"small\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, \"Add to cart\"))));\n}\n\n_s(ProductDetails, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = ProductDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductDetails\");","map":{"version":3,"sources":["/Users/phan/Desktop/Integrify/fullstack-graphql-next-nexus-prisma/pages/products/details/[id].tsx"],"names":["React","Button","Card","CardActions","CardContent","CardMedia","Typography","useStyles","ProductDetails","classes","root","img","details"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,EAAgBC,IAAhB,EAAsBC,WAAtB,EAAmCC,WAAnC,EAAgDC,SAAhD,EAA2DC,UAA3D,QAA4E,mBAA5E;AACA,OAAOC,SAAP,MAAsB,UAAtB;;AAuBA,eAAe,SAASC,cAAT,GAA2B;AAAA;;AACtC,MAAMC,OAAO,GAAGF,SAAS,EAAzB;AACA,SACA,MAAC,IAAD;AAAM,IAAA,SAAS,EAAEE,OAAO,CAACC,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,SAAD;AACI,IAAA,SAAS,EAAED,OAAO,CAACE,GADvB;AAEI,IAAA,KAAK,EAAC,uGAFV;AAGI,IAAA,KAAK,EAAC,6BAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAMI;AAAK,IAAA,SAAS,EAAEF,OAAO,CAACG,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,UAAD;AAAY,IAAA,SAAS,EAAC,IAAtB;AAA2B,IAAA,OAAO,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAII,MAAC,UAAD;AAAY,IAAA,OAAO,EAAC,WAApB;AAAgC,IAAA,KAAK,EAAC,eAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJJ,EAOI,MAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,KAAK,EAAC,eAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAPJ,EAUI,MAAC,UAAD;AAAY,IAAA,OAAO,EAAC,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVJ,CADJ,EAeI,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,OAAb;AAAqB,IAAA,KAAK,EAAC,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,CAfJ,CANJ,CADA;AA8BH;;GAhCuBJ,c;UACJD,S;;;KADIC,c","sourcesContent":["import React from 'react'\nimport {Button, Card, CardActions, CardContent, CardMedia, Typography} from \"@material-ui/core\"\nimport useStyles from '../style'\nimport { useQuery, gql } from '@apollo/client'\nimport {GetStaticPaths, GetStaticProps} from \"next\";\nimport client from \"../../apollo\";\n\nconst DETAIL_PRODUCT = gql`\n    query product($queryStr: String!) {\n        product(queryStr: $queryStr) {\n            id\n            name\n        }\n    }\n`\nconst ALL_PRODUCTS = gql`\n    query allProducts($skip: String!, $take: String!) {\n        allProducts(skip: $skip, take: $take) {\n            id\n            name\n        }\n    }\n`\n\n\nexport default function ProductDetails () {\n    const classes = useStyles()\n    return (\n    <Card className={classes.root}>\n        <CardMedia\n            className={classes.img}\n            image=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRROrogs_AtLLQ3iO8Ji3UsVNGhqgGKCqOt7Q&usqp=CAU\"\n            title=\"Live from space album cover\"\n        />\n        <div className={classes.details}>\n            <CardContent>\n                <Typography component=\"h1\" variant=\"h3\">\n                    Name\n                </Typography>\n                <Typography variant=\"subtitle1\" color=\"textSecondary\">\n                    Price\n                </Typography>\n                <Typography variant=\"h5\" color=\"textSecondary\">\n                    isAvailable\n                </Typography>\n                <Typography variant=\"subtitle2\">\n                    desc\n                </Typography>\n            </CardContent>\n            <CardActions>\n                <Button size=\"small\" color=\"primary\">\n                    Add to cart\n                </Button>\n            </CardActions>\n        </div>\n    </Card>\n    );\n}\n\nexport const getStaticProps:GetStaticProps = async (ctx) => {\n    console.log('ctx?.params?.id', ctx?.params?.id )\n    const { loading, error, data } = await client.query({\n        query: DETAIL_PRODUCT,\n        variables: {queryStr: ctx?.params?.id}\n    })\n    console.log('data-->', data)\n\n    return {\n        props: {\n            product: data!\n        },\n    }\n}\n\nexport const getStaticPaths:GetStaticPaths<{id:string}> = async () => {\n    const {  data } = await client.query({\n        query: ALL_PRODUCTS,\n        variables: {\n            skip: \"0\",\n            take: \"2\"\n        }\n    })\n    console.log('data-->', data)\n    return {\n        fallback: true,\n        paths: [{\n            params: {id:'ckcmfyx810043xg9ktc93hmmj'}\n        }]\n    }\n}\n"]},"metadata":{},"sourceType":"module"}