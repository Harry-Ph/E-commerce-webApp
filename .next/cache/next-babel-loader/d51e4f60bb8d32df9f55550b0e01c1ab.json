{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport { withUrqlClient } from \"next-urql\";\nimport NextApp from \"next/app\";\nimport fetch from \"isomorphic-unfetch\";\nimport NavBar from '../components/NavBar/NavBar';\nimport Footer from '../components/Footer/Footer';\nimport { Router } from 'next/dist/client/router';\nimport Head from 'next/head';\nimport { SWRConfig } from 'swr';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport theme from '../theme';\nimport Nprogress from 'nprogress';\nimport 'nprogress/nprogress.css';\nimport { useStylesApp } from './style';\nimport { request } from \"graphql-request\"; // the URL to /api/graphql\n\nexport var GRAPHQL_ENDPOINT = \"http://localhost:3000/api/graphql\";\nvar API = 'http://localhost:3000/api/graphql';\n\nvar fetcher = function fetcher(query, skip, take) {\n  return request(API, query, {\n    skip: skip,\n    take: take\n  });\n};\n\nRouter.events.on('routeChangeStart', function () {\n  Nprogress.start();\n});\nRouter.events.on('routeChangeComplete', function () {\n  Nprogress.done();\n});\nRouter.events.on('routeChangeError', function () {\n  Nprogress.done();\n});\n\nvar App = function App(_ref) {\n  var Component = _ref.Component,\n      pageProps = _ref.pageProps;\n  var classes = useStylesApp();\n  React.useEffect(function () {\n    // Remove the server-side injected CSS.\n    var jssStyles = document.querySelector('#jss-server-side');\n\n    if (jssStyles) {\n      jssStyles.parentElement.removeChild(jssStyles);\n    }\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"My page\"), __jsx(\"meta\", {\n    name: \"viewport\",\n    content: \"minimum-scale=1, initial-scale=1, width=device-width\"\n  })), __jsx(ThemeProvider, {\n    theme: theme\n  }, __jsx(CssBaseline, null), __jsx(NavBar, null), __jsx(\"div\", {\n    className: classes.contentApp\n  }, __jsx(SWRConfig, {\n    value: {\n      refreshInterval: 8000,\n      dedupingInterval: 5000,\n      fetcher: fetcher\n    }\n  }, __jsx(Component, pageProps))), __jsx(Footer, null)));\n};\n\nApp.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(ctx) {\n    var appProps;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return NextApp.getInitialProps(ctx);\n\n          case 2:\n            appProps = _context.sent;\n            return _context.abrupt(\"return\", _objectSpread({}, appProps));\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default withUrqlClient(function (_ssrExchange, _ctx) {\n  return {\n    url: GRAPHQL_ENDPOINT,\n    fetch: fetch\n  };\n})( // @ts-ignore\nApp);","map":null,"metadata":{},"sourceType":"module"}